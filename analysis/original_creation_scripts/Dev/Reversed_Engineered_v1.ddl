-- Generated by Oracle SQL Developer Data Modeler 21.1.0.092.1221
--   at:        2024-02-13 16:20:16 GMT
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE SEQUENCE medsdata.beach_seq START WITH 1 INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.connection_id_generator START WITH 2387 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 CYCLE NOCACHE;

CREATE SEQUENCE medsdata.gmimages1id1 START WITH 5 INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.gmimages2id2 START WITH 5 INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i401 START WITH 44971 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i403 START WITH 31 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i404 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i405 START WITH 51 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i406 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i407 START WITH 141 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i408 START WITH 131 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i409 START WITH 71 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i410 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i411 START WITH 191 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i412 START WITH 41 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i413 START WITH 31 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i415 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i416 START WITH 511 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i418 START WITH 211 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i419 START WITH 141 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i420 START WITH 551 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i421 START WITH 421 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i422 START WITH 1961 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i423 START WITH 1811 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i424 START WITH 1011 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i425 START WITH 701 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i426 START WITH 621 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i427 START WITH 2371 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i428 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i429 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i430 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i431 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i432 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i433 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i434 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i435 START WITH 51 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i436 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i438 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i439 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i440 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i441 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i442 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i443 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i444 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i447 START WITH 61 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i448 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i449 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i450 START WITH 31 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i451 START WITH 381 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i452 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i453 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i455 START WITH 51 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i456 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i457 START WITH 121 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i458 START WITH 61 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i459 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i460 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i461 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i462 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i463 START WITH 121 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i464 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i465 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i466 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i467 START WITH 111 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i468 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i469 START WITH 41 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i471 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i472 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i473 START WITH 41 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i474 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i475 START WITH 31 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i476 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i477 START WITH 61 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i478 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i479 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i480 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i481 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i482 START WITH 31 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i483 START WITH 321 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i484 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i485 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i486 START WITH 61 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i487 START WITH 611 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i488 START WITH 691 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i490 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i491 START WITH 41 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i492 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i493 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i494 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i495 START WITH 91 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i496 START WITH 31 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i497 START WITH 101 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i500 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i501 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i502 START WITH 461 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i503 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i504 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i505 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i506 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i507 START WITH 61 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i508 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i509 START WITH 11 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i510 START WITH 2431 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i511 START WITH 13941 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i514 START WITH 6441 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i515 START WITH 21 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.i520 START WITH 15911 INCREMENT BY 10 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.layer_id_generator START WITH 586 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.layer_sequence START WITH 221 INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.locator_id_generator START WITH 18 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.meic_number_sequence START WITH 2117 INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.metadata_id_generator START WITH 3322 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r100 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r101 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r104 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r105 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r107 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r108 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r111 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r112 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r113 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r114 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r115 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r116 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r117 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r118 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r123 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r124 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r125 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r126 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r127 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r128 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r129 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r13 START WITH 15 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r130 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r131 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r133 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r135 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r137 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r138 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r139 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r141 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r144 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r146 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r147 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r148 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r149 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r152 START WITH 641 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r157 START WITH 641 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r161 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r162 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r163 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r164 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r167 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r168 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r169 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r170 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r171 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r172 START WITH 1281 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r173 START WITH 641 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r174 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r175 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r176 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r177 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r178 START WITH 337 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r179 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r18 START WITH 1 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r180 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r181 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r182 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r184 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r186 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r187 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r188 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r189 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r19 START WITH 1 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r190 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r191 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r192 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r193 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r194 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r197 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r199 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r2 START WITH 10 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r20 START WITH 1 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r201 START WITH 641 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r202 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r22 START WITH 1 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r222 START WITH 10241 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r223 START WITH 16641 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r224 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r225 START WITH 65521 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r230 START WITH 369 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r232 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r233 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r234 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r236 START WITH 241 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r238 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r24 START WITH 28 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r241 START WITH 1025 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r245 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r246 START WITH 1 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r247 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r248 START WITH 241 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r250 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r251 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r253 START WITH 4081 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r255 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r257 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r258 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r26 START WITH 1 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r261 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r262 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r263 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r264 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r265 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r266 START WITH 241 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r267 START WITH 513 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r268 START WITH 497 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r269 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r270 START WITH 241 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r271 START WITH 1009 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r272 START WITH 497 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r273 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r274 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r275 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r276 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r277 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r278 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r279 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r283 START WITH 45057 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r285 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r286 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r287 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r288 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r289 START WITH 129 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r290 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r293 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r294 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r295 START WITH 529 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r296 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r298 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r3 START WITH 365 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r300 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r301 START WITH 513 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r303 START WITH 241 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r305 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r307 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r308 START WITH 257 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r309 START WITH 529 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r310 START WITH 529 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r311 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r312 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r313 START WITH 241 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r314 START WITH 1009 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r315 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r316 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r317 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r318 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r319 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r320 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r321 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r322 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r323 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r325 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r326 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r327 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r328 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r329 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r330 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r331 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r334 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r335 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r336 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r337 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r338 START WITH 609 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r339 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r340 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r342 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r343 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r344 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r345 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r346 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r347 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r348 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r349 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r350 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r351 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r352 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r353 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r354 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r355 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r356 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r358 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r359 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r360 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r361 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r362 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r363 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r364 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r365 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r366 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r367 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r368 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r369 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r370 START WITH 497 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r371 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r372 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r373 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r374 START WITH 241 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r375 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r377 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r378 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r379 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r380 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r381 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r382 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r383 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r384 START WITH 113 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r387 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r388 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r389 START WITH 561 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r390 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r391 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r392 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r393 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r394 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r395 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r396 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r397 START WITH 4129 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r398 START WITH 14321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r401 START WITH 8177 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r402 START WITH 49 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r405 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r407 START WITH 401 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r409 START WITH 16369 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r414 START WITH 177 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r416 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r417 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r419 START WITH 17 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r420 START WITH 497 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r421 START WITH 12273 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r432 START WITH 65 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r5 START WITH 3 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r6 START WITH 9 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r7 START WITH 1 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.r79 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r80 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r92 START WITH 641 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r93 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r94 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r95 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r97 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r98 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.r99 START WITH 321 INCREMENT BY 16 MAXVALUE 2147483647 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.rastercolumn_id_generator START WITH 6 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.sde_bid_5 START WITH 2 INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.sde_logfile_lid_gen START WITH 2209 INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE
20;

CREATE SEQUENCE medsdata.sde_rid_5 START WITH 2 INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE medsdata.state_id_generator_nc START WITH 1435 INCREMENT BY 1 MAXVALUE 4294967295 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE medsdata.table_id_generator START WITH 433 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE SEQUENCE medsdata.version_id_generator START WITH 3 INCREMENT BY 1 MAXVALUE 2147483647 MINVALUE 1 NOCACHE;

CREATE TABLE medsdata.access_control (
    table_name    VARCHAR2(32) NOT NULL,
    user_name     VARCHAR2(32) NOT NULL,
    multi_select  NUMBER(1)
)
LOGGING;

CREATE TABLE medsdata.adcp_data (
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    depth_bsl_trans          NUMBER(12, 4),
    heading                  NUMBER(12, 4),
    pitch                    NUMBER(12, 4),
    roll                     NUMBER(12, 4),
    compass                  NUMBER(12, 4),
    temperature              NUMBER(12, 4),
    bin_size                 NUMBER(12, 4),
    bin_1_distance           NUMBER(12, 4),
    ensemble                 VARCHAR2(20),
    water_depth              NUMBER(20, 10),
    no_bins                  NUMBER(10),
    no_ensembles             NUMBER(10),
    speed_ship               NUMBER(20, 10),
    dir_ship                 NUMBER(20, 10),
    u_ship                   NUMBER(20, 10),
    v_ship                   NUMBER(20, 10),
    u_bottom                 NUMBER(20, 10),
    v_bottom                 NUMBER(20, 10),
    scale_factor             NUMBER(12, 4),
    profile                  NUMBER(10),
    julian_day               NUMBER(12, 4)
)
LOGGING;

CREATE INDEX medsdata.idx_adcp_data_job ON
    medsdata.adcp_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.adcp_observation (
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    longitude                NUMBER(20, 10),
    latitude                 NUMBER(20, 10),
    date_recorded            DATE,
    ensemble                 VARCHAR2(20),
    cog                      NUMBER(12, 4),
    profile                  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_adcp_job ON
    medsdata.adcp_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.si_adcp ON
    medsdata.adcp_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_adcp_date ON
    medsdata.adcp_observation (
        date_recorded
    ASC );

CREATE TABLE medsdata.adcp_repeat (
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    data_id                  NUMBER(10),
    bin                      NUMBER(10),
    speed                    NUMBER(20, 10),
    direction                NUMBER(20, 10),
    u_east_west              NUMBER(20, 10),
    v_north_south            NUMBER(20, 10),
    w_vertical               NUMBER(20, 10),
    error                    NUMBER(20, 10),
    percentage_error         NUMBER(10),
    echo_int_average         NUMBER(12, 4),
    depth_bsl                NUMBER(12, 4),
    quality                  NUMBER(12, 6),
    ensemble                 VARCHAR2(20),
    profile                  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_adcp_repeat_job ON
    medsdata.adcp_repeat (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.aqua2081_line_data (
    latitude                 NUMBER(12, 4),
    longitude                NUMBER(12, 4),
    date_recorded            DATE,
    pressure                 NUMBER(12, 4),
    depth                    NUMBER(12, 4),
    temperature              NUMBER(12, 4),
    salinity                 NUMBER(12, 4),
    conductivity             NUMBER(12, 4),
    sound_speed              NUMBER(12, 4),
    biolummin                NUMBER(12, 4),
    biolummax                NUMBER(12, 4),
    biolumsd                 NUMBER(12, 4),
    biolumn                  NUMBER(6),
    chlorn                   NUMBER(6),
    gelbn                    NUMBER(6),
    hydron                   NUMBER(6),
    soundmin                 NUMBER(12, 4),
    soundmax                 NUMBER(12, 4),
    soundsd                  NUMBER(12, 4),
    soundn                   NUMBER(6),
    tempmin                  NUMBER(12, 4),
    tempmax                  NUMBER(12, 4),
    tempsd                   NUMBER(12, 4),
    tempn                    NUMBER(6),
    condmin                  NUMBER(12, 4),
    condmax                  NUMBER(12, 4),
    condsd                   NUMBER(12, 4),
    condn                    NUMBER(6),
    salmax                   NUMBER(12, 4),
    salmin                   NUMBER(12, 4),
    salsd                    NUMBER(12, 4),
    saln                     NUMBER(6),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    bioluminescence          NUMBER(20, 4),
    gelbstoffe               NUMBER(20, 17),
    chlorophyll              NUMBER(20, 17),
    hydrocarbons             NUMBER(20, 17),
    gelbmin                  NUMBER(20, 17),
    gelbmax                  NUMBER(20, 17),
    gelbsd                   NUMBER(20, 17),
    hydromin                 NUMBER(20, 17),
    hydromax                 NUMBER(20, 17),
    hydrosd                  NUMBER(20, 17),
    chlormin                 NUMBER(20, 17),
    chlormax                 NUMBER(20, 17),
    chlorsd                  NUMBER(20, 17),
    seabed_depth             NUMBER(12, 4)
)
LOGGING;

CREATE INDEX medsdata.idx_aqua2081_data_meds ON
    medsdata.aqua2081_line_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.aqua2081_line_observation (
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    latitude                 NUMBER(12, 4),
    longitude                NUMBER(12, 4),
    date_recorded            DATE
)
LOGGING;

CREATE INDEX medsdata.idx_aqua2081_latlon ON
    medsdata.aqua2081_line_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.si_aqua2081line ON
    medsdata.aqua2081_line_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_aqua2081_job ON
    medsdata.aqua2081_line_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.aquapack_job (
    validated                VARCHAR2(1),
    temporal_resolution      VARCHAR2(10),
    geographical_resolution  VARCHAR2(20),
    date_archived            DATE,
    sensor_unit_number       VARCHAR2(16),
    vessel                   VARCHAR2(50),
    comments                 VARCHAR2(500),
    job_number               NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_date_aquapack_2 ON
    medsdata.aquapack_job (
        validated
    ASC );

CREATE INDEX medsdata.idx_date_aquapack_1 ON
    medsdata.aquapack_job (
        date_archived
    ASC );

CREATE TABLE medsdata.aquapack_line_data (
    pressure                 NUMBER(12, 4),
    depth                    NUMBER(12, 4),
    temperature              NUMBER(12, 4),
    salinity                 NUMBER(12, 4),
    conductivity             NUMBER(12, 4),
    sound_speed              NUMBER(12, 4),
    biolummin                NUMBER(12, 4),
    biolummax                NUMBER(12, 4),
    biolumsd                 NUMBER(12, 4),
    biolumn                  NUMBER(6),
    chlorn                   NUMBER(6),
    gelbn                    NUMBER(6),
    hydron                   NUMBER(6),
    soundmin                 NUMBER(12, 4),
    soundmax                 NUMBER(12, 4),
    soundsd                  NUMBER(12, 4),
    soundn                   NUMBER(6),
    tempmin                  NUMBER(12, 4),
    tempmax                  NUMBER(12, 4),
    tempsd                   NUMBER(12, 4),
    tempn                    NUMBER(6),
    condmin                  NUMBER(12, 4),
    condmax                  NUMBER(12, 4),
    condsd                   NUMBER(12, 4),
    condn                    NUMBER(6),
    salmax                   NUMBER(12, 4),
    salmin                   NUMBER(12, 4),
    salsd                    NUMBER(12, 4),
    saln                     NUMBER(6),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    hydrocarbons             NUMBER(20, 17),
    gelbstoffe               NUMBER(20, 17),
    chlorophyll              NUMBER(20, 17),
    bioluminescence          NUMBER(20, 4),
    hydromin                 NUMBER(20, 17),
    hydromax                 NUMBER(20, 17),
    hydrosd                  NUMBER(20, 17),
    chlormin                 NUMBER(20, 17),
    chlormax                 NUMBER(20, 17),
    chlorsd                  NUMBER(20, 17),
    gelbmin                  NUMBER(20, 17),
    gelbmax                  NUMBER(20, 17),
    gelbsd                   NUMBER(20, 17),
    latitude                 NUMBER(12, 4),
    longitude                NUMBER(12, 4),
    date_recorded            DATE,
    seabed_depth             NUMBER(12, 4)
)
LOGGING;

CREATE INDEX medsdata.idx_aqualine_data_meds ON
    medsdata.aquapack_line_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.aquapack_line_observation (
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    latitude                 NUMBER(12, 4),
    longitude                NUMBER(12, 4),
    date_recorded            DATE
)
LOGGING;

CREATE INDEX medsdata.idx_aqualine_latlon ON
    medsdata.aquapack_line_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.si_aquapackline ON
    medsdata.aquapack_line_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_aqualine_job ON
    medsdata.aquapack_line_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.aquapack_profile_data (
    pressure                 NUMBER(12, 4),
    depth                    NUMBER(12, 4),
    temperature              NUMBER(12, 4),
    salinity                 NUMBER(12, 4),
    conductivity             NUMBER(12, 4),
    sound_speed              NUMBER(12, 4),
    biolummin                NUMBER(12, 4),
    biolummax                NUMBER(12, 4),
    biolumsd                 NUMBER(12, 4),
    biolumn                  NUMBER(6),
    chlorn                   NUMBER(6),
    gelbn                    NUMBER(6),
    hydron                   NUMBER(6),
    soundmin                 NUMBER(12, 4),
    soundmax                 NUMBER(12, 4),
    soundsd                  NUMBER(12, 4),
    soundn                   NUMBER(6),
    tempmin                  NUMBER(12, 4),
    tempmax                  NUMBER(12, 4),
    tempsd                   NUMBER(12, 4),
    tempn                    NUMBER(6),
    condmin                  NUMBER(12, 4),
    condmax                  NUMBER(12, 4),
    condsd                   NUMBER(12, 4),
    condn                    NUMBER(6),
    salmax                   NUMBER(12, 4),
    salmin                   NUMBER(12, 4),
    salsd                    NUMBER(12, 4),
    saln                     NUMBER(6),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    bioluminescence          NUMBER(20, 4),
    gelbstoffe               NUMBER(20, 17),
    chlorophyll              NUMBER(20, 17),
    hydrocarbons             NUMBER(20, 17),
    gelbmin                  NUMBER(20, 17),
    gelbmax                  NUMBER(20, 17),
    gelbsd                   NUMBER(20, 17),
    hydromin                 NUMBER(20, 17),
    hydromax                 NUMBER(20, 17),
    hydrosd                  NUMBER(20, 17),
    chlormin                 NUMBER(20, 17),
    chlormax                 NUMBER(20, 17),
    chlorsd                  NUMBER(20, 17)
)
LOGGING;

CREATE INDEX medsdata.idx_aquaprof_data_meds ON
    medsdata.aquapack_profile_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.aquapack_profile_observation (
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    longitude                NUMBER(12, 4),
    latitude                 NUMBER(12, 4),
    date_recorded            DATE,
    seabed_depth             NUMBER(12) DEFAULT 0
)
LOGGING;

CREATE INDEX medsdata.si_aquapackprofi ON
    medsdata.aquapack_profile_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE TABLE medsdata.asrap_point_cads_repeat (
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    mean_depth               VARCHAR2(4),
    year                     NUMBER(4),
    quality                  VARCHAR2(1),
    number_of_depth_levels   NUMBER(2),
    number_of_comments       NUMBER(2),
    comments                 VARCHAR2(650),
    month                    VARCHAR2(2)
)
LOGGING;

CREATE INDEX medsdata.idx_job_asrap_1 ON
    medsdata.asrap_point_cads_repeat (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.asrap_point_data (
    hfbl                     NUMBER(12, 3),
    lfbl                     NUMBER(12, 3),
    shipping_noise           NUMBER(12, 3),
    mean_depth               VARCHAR2(4),
    mean_deep_depth          VARCHAR2(4),
    jan_height               VARCHAR2(5),
    feb_height               VARCHAR2(5),
    mar_height               VARCHAR2(5),
    apr_height               VARCHAR2(5),
    may_height               VARCHAR2(5),
    jun_height               VARCHAR2(5),
    jul_height               VARCHAR2(5),
    aug_height               VARCHAR2(5),
    sep_height               VARCHAR2(5),
    oct_height               VARCHAR2(5),
    nov_height               VARCHAR2(5),
    dec_height               VARCHAR2(5),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    ho_caveat                VARCHAR2(25)
)
LOGGING;

CREATE INDEX medsdata.idx_job_asrap_2 ON
    medsdata.asrap_point_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.asrap_point_observation (
    domain_id                VARCHAR2(10),
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    longitude                NUMBER(12, 6),
    latitude                 NUMBER(12, 6)
)
LOGGING;

CREATE INDEX medsdata.idx_posn_asrap_1 ON
    medsdata.asrap_point_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.si_asrappoint ON
    medsdata.asrap_point_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_job_asrap_3 ON
    medsdata.asrap_point_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.asrap_point_repeat (
    depth                    NUMBER(12, 3),
    temperature              NUMBER(12, 3),
    salinity                 NUMBER(12, 3),
    sound_velocity           NUMBER(12, 3),
    source_code              VARCHAR2(1),
    sv_code                  VARCHAR2(1),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    month                    VARCHAR2(2)
)
LOGGING;

CREATE INDEX medsdata.idx_job_asrap_4 ON
    medsdata.asrap_point_repeat (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.asrap_polygon_observation (
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    domain_id                VARCHAR2(10)
)
LOGGING;

CREATE INDEX medsdata.idx_job_asrap_5 ON
    medsdata.asrap_polygon_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.si_asrappoly ON
    medsdata.asrap_polygon_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE TABLE medsdata.asrap_polygon_repeat (
    ho_caveat_1              VARCHAR2(4),
    ho_caveat_2              VARCHAR2(5),
    ices_quadrant            VARCHAR2(1),
    marsden_square           VARCHAR2(3),
    degree_square            VARCHAR2(2),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    latitude                 NUMBER(12, 8),
    longitude                NUMBER(12, 8),
    point_order              NUMBER(8)
)
LOGGING;

CREATE INDEX medsdata.idx_posn_asrap_2 ON
    medsdata.asrap_polygon_repeat (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_job_asrap_6 ON
    medsdata.asrap_polygon_repeat (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.beach_data (
    tblbeachesid              VARCHAR2(20),
    map                       VARCHAR2(10),
    sheet                     VARCHAR2(10),
    grid                      VARCHAR2(10),
    anchorage                 VARCHAR2(500),
    surf_conditions           VARCHAR2(20),
    surf_sea_swell            VARCHAR2(600),
    approach_seaward          VARCHAR2(700),
    obstructions              VARCHAR2(500),
    jetties_ramps_hards       VARCHAR2(600),
    air_landing_sites         VARCHAR2(500),
    water_and_engineering     VARCHAR2(600),
    publication_status        VARCHAR2(500),
    cd_rom_reference          VARCHAR2(50),
    type_of_imagery           VARCHAR2(100),
    classification            VARCHAR2(20),
    originator                VARCHAR2(50),
    current_speed             VARCHAR2(20),
    current_orientation       VARCHAR2(20),
    gradient_overall          VARCHAR2(20),
    gradient_survey_date      VARCHAR2(20),
    gradient_bearing          VARCHAR2(20),
    drop_zone_description     VARCHAR2(500),
    drop_zone_location        VARCHAR2(100),
    link_to_ground_photo      VARCHAR2(500),
    link_to_beach_diagram     VARCHAR2(500),
    link_to_gradient_diagram  VARCHAR2(500),
    card_2                    VARCHAR2(20),
    meds_job_number           NUMBER(10),
    meds_observation_number   NUMBER(10),
    card_1                    VARCHAR2(10),
    exit_description          VARCHAR2(700),
    hinterland                VARCHAR2(800)
)
LOGGING;

CREATE INDEX medsdata.idx_date_beach_5 ON
    medsdata.beach_data (
        gradient_survey_date
    ASC );

CREATE INDEX medsdata.idx_job_beach_7 ON
    medsdata.beach_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.beach_observation (
    beach_name               VARCHAR2(50),
    beach_category           NUMBER(1),
    beach_number             VARCHAR2(20),
    date_of_survey           DATE,
    gradient_nearshore       NUMBER(1),
    gradient_foreshore       NUMBER(1),
    gradient_backshore       NUMBER(1),
    trafficability           NUMBER(1),
    exit_conditions          NUMBER(1),
    sector                   VARCHAR2(10),
    latitude                 NUMBER(13, 4),
    longitude                NUMBER(13, 4),
    surf_height              NUMBER(10, 2),
    beach_dimensions         NUMBER(10),
    quality_of_reece         VARCHAR2(3),
    beach_composition        VARCHAR2(17),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    location                 mdsys.sdo_geometry,
    country                  VARCHAR2(50),
    beach_changes            VARCHAR2(500),
    beach_changes_no         NUMBER(2)
)
LOGGING;

CREATE INDEX medsdata.idx_job_beach_8 ON
    medsdata.beach_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.si_beachobservat ON
    medsdata.beach_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_date_beach_8 ON
    medsdata.beach_observation (
        date_of_survey
    ASC );

CREATE INDEX medsdata.idx_posn_beach_3 ON
    medsdata.beach_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.bioluminescence_data (
    mp_band                  VARCHAR2(20),
    mp_direction             VARCHAR2(20),
    mp_dur                   VARCHAR2(20),
    area                     VARCHAR2(200),
    mp_freq                  VARCHAR2(20),
    mp_length                VARCHAR2(20),
    mp_no                    VARCHAR2(20),
    mp_rotate                VARCHAR2(20),
    mp_seperate              VARCHAR2(20),
    bowwv                    VARCHAR2(20),
    mp_spd                   VARCHAR2(20),
    colour                   VARCHAR2(200),
    diffuse                  VARCHAR2(20),
    patch                    VARCHAR2(200),
    stimulus                 VARCHAR2(200),
    surface                  VARCHAR2(20),
    vhead                    VARCHAR2(20),
    vkts                     VARCHAR2(20),
    wake                     VARCHAR2(20),
    wdep                     VARCHAR2(20),
    samp                     VARCHAR2(20),
    wvcrsts                  VARCHAR2(20),
    record_number            VARCHAR2(20),
    vessel                   VARCHAR2(50),
    pt                       VARCHAR2(20),
    ss                       VARCHAR2(50),
    wd_dir                   VARCHAR2(50),
    wd_spd                   VARCHAR2(50),
    meds_job_number          NUMBER(8),
    meds_observation_number  NUMBER(8),
    sst                      VARCHAR2(20),
    ident                    VARCHAR2(50),
    comment_1                VARCHAR2(700),
    airtd                    VARCHAR2(20),
    airtw                    VARCHAR2(20),
    baro                     VARCHAR2(20),
    class                    VARCHAR2(300),
    archived                 VARCHAR2(25),
    reference                VARCHAR2(100),
    range                    VARCHAR2(20)
)
LOGGING;

CREATE INDEX medsdata.idx_job_bioluminescence_9 ON
    medsdata.bioluminescence_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.bioluminescence_observation (
    meds_observation_number  NUMBER(8),
    datetime                 DATE,
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(8)
)
LOGGING;

CREATE INDEX medsdata.idx_date_bioluminescence_9 ON
    medsdata.bioluminescence_observation (
        datetime
    ASC );

CREATE INDEX medsdata.idx_posn_bioluminescence_4 ON
    medsdata.bioluminescence_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_job_bioluminescence_10 ON
    medsdata.bioluminescence_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.si_bioluminescen ON
    medsdata.bioluminescence_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE TABLE medsdata.biomass_data (
    upper_depth              NUMBER(8, 3),
    lower_depth              NUMBER(8, 3),
    total_displacement_vol   NUMBER(12, 8),
    total_settled_volume     NUMBER(12, 8),
    total_wet_mass           NUMBER(12, 8),
    total_dry_mass           NUMBER(12, 8),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_biomass_job ON
    medsdata.biomass_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.biomass_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE,
    latitude                 NUMBER(12, 8),
    longitude                NUMBER(12, 8)
)
LOGGING;

CREATE INDEX medsdata.idx_posn_biomass ON
    medsdata.biomass_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_job_biomass ON
    medsdata.biomass_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_date_biomass ON
    medsdata.biomass_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.si_biomass ON
    medsdata.biomass_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE TABLE medsdata.chart_panel (
    chart_number_prefix    CHAR(3),
    chart_number           NUMBER,
    chart_number_suffix    CHAR(1),
    panel_number           NUMBER,
    main_title             VARCHAR2(100),
    scale                  NUMBER,
    horizontal_datum_code  CHAR(3),
    projection_code        NUMBER,
    wgs_shift_ns           NUMBER,
    wgs_shift_ew           NUMBER,
    limits                 mdsys.sdo_geometry
)
LOGGING;

CREATE INDEX medsdata.si_chart_panel ON
    medsdata.chart_panel (
        limits
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE TABLE medsdata.class_information (
    data_class       VARCHAR2(50),
    data_type        VARCHAR2(50),
    temporal         VARCHAR2(500),
    grid             VARCHAR2(50),
    resolution       VARCHAR2(40),
    job_col          VARCHAR2(30),
    table_name       VARCHAR2(40),
    header_table     VARCHAR2(40),
    data_style       VARCHAR2(40),
    file_name        VARCHAR2(30),
    color            VARCHAR2(10),
    data_type_index  NUMBER(8)
)
LOGGING;

CREATE TABLE medsdata.cruise_layer (
    cruise_geometry     mdsys.sdo_geometry,
    start_port          VARCHAR2(100),
    start_date          DATE,
    end_date            DATE,
    end_port            VARCHAR2(100),
    cruise_name         VARCHAR2(50),
    cruise_descriptor   VARCHAR2(50),
    meds_cruise_number  NUMBER(10) NOT NULL,
    booking_number      NUMBER(10)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.cruise_layer_idx ON
    medsdata.cruise_layer (
        meds_cruise_number
    ASC );

CREATE INDEX medsdata.cruise_layer_booking_idx ON
    medsdata.cruise_layer (
        booking_number
    ASC );

CREATE INDEX medsdata.cruise_layer_name_idx ON
    medsdata.cruise_layer (
        cruise_name
    ASC );

ALTER TABLE medsdata.cruise_layer
    ADD CONSTRAINT cruise_layer_idx PRIMARY KEY ( meds_cruise_number )
        USING INDEX medsdata.cruise_layer_idx;

CREATE TABLE medsdata.data_types_table (
    description  VARCHAR2(100),
    data_type    VARCHAR2(20),
    type_index   NUMBER(8)
)
LOGGING;

CREATE TABLE medsdata.dataset_lookup (
    name           VARCHAR2(50),
    dataset_index  NUMBER(8)
)
LOGGING;

CREATE TABLE medsdata.dbfield_lookup (
    field_index       NUMBER(4),
    field_name        VARCHAR2(50),
    header_data_flag  NUMBER(1),
    data_type         VARCHAR2(50),
    file_ext          VARCHAR2(50),
    field_size        NUMBER(4),
    field_precision   NUMBER(4),
    single_repeat     VARCHAR2(1),
    field_type        VARCHAR2(3),
    field_value       VARCHAR2(50)
)
LOGGING;

CREATE INDEX medsdata.idx_dbfield_findex ON
    medsdata.dbfield_lookup (
        field_index
    ASC );

CREATE TABLE medsdata.deep_scattering_data (
    sonar_frequency          NUMBER(5),
    type_of_sonar            VARCHAR2(50),
    e_s_trace_reference      VARCHAR2(50),
    ship                     VARCHAR2(100),
    hi_cruise                VARCHAR2(100),
    remarks                  VARCHAR2(500),
    sea_state                NUMBER(1),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    archived                 VARCHAR2(25),
    end_time                 VARCHAR2(20),
    gain_settings            VARCHAR2(20),
    month                    VARCHAR2(10),
    start_time               VARCHAR2(10),
    depth_of_top_layer       VARCHAR2(20),
    layer_thickness          VARCHAR2(20),
    extent_of_motion         VARCHAR2(20),
    end_lat_long             VARCHAR2(50)
)
LOGGING;

CREATE INDEX medsdata.idx_job_deep_11 ON
    medsdata.deep_scattering_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.deep_scattering_observation (
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    date_recorded            DATE,
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.si_deepscatterin ON
    medsdata.deep_scattering_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_job_deep_12 ON
    medsdata.deep_scattering_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_posn_deep_5 ON
    medsdata.deep_scattering_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_date_deep_10 ON
    medsdata.deep_scattering_observation (
        date_recorded
    ASC );

CREATE TABLE medsdata.dir_ambient_data (
    exersize                 VARCHAR2(20),
    platform                 VARCHAR2(20),
    array_type               VARCHAR2(20),
    array_depth              VARCHAR2(20),
    frequency                VARCHAR2(20),
    omni                     VARCHAR2(20),
    standard_deviation       VARCHAR2(20),
    number_of_iterations     VARCHAR2(20),
    number_of_headings       VARCHAR2(20),
    wind_speed               VARCHAR2(20),
    sea_state                VARCHAR2(20),
    octave_number            VARCHAR2(20),
    record_number            VARCHAR2(20),
    site_id_                 VARCHAR2(20),
    number_of_frequencies    VARCHAR2(20),
    comments                 VARCHAR2(100),
    water_depth              VARCHAR2(20),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    ship_code                VARCHAR2(20),
    country_code             VARCHAR2(20),
    location_description     VARCHAR2(100),
    speed                    VARCHAR2(20),
    archive_dat              VARCHAR2(20)
)
LOGGING;

CREATE INDEX medsdata.idx_job_dir_13 ON
    medsdata.dir_ambient_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.dir_ambient_observation (
    date_recorded            DATE,
    location                 mdsys.sdo_geometry,
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.si_dirambient ON
    medsdata.dir_ambient_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_posn_dir_6 ON
    medsdata.dir_ambient_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_date_dir_11 ON
    medsdata.dir_ambient_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.idx_job_dir_14 ON
    medsdata.dir_ambient_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.dir_ambient_repeat (
    spectral_level           NUMBER(5),
    decibels                 NUMBER(12, 3),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_job_dir_15 ON
    medsdata.dir_ambient_repeat (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.directory_lookup (
    user_name    CHAR(50) NOT NULL,
    lookup_type  CHAR(16) NOT NULL,
    file_path    CHAR(256) NOT NULL
)
LOGGING;

CREATE TABLE medsdata.dive_site_data (
    site_number              NUMBER(5),
    name                     VARCHAR2(100),
    region                   VARCHAR2(50),
    area                     VARCHAR2(50),
    type_of_activity         VARCHAR2(50),
    inshore_offshore         VARCHAR2(20),
    comments                 VARCHAR2(200),
    date_recorded            DATE,
    water_clarity            VARCHAR2(30),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    main_species             VARCHAR2(250),
    time_of_year             VARCHAR2(200),
    depth                    VARCHAR2(50),
    lat_lon                  VARCHAR2(50)
)
LOGGING;

CREATE INDEX medsdata.idx_date_dive_12 ON
    medsdata.dive_site_data (
        date_recorded
    ASC );

CREATE INDEX medsdata.idx_job_dive_16 ON
    medsdata.dive_site_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.dive_site_observation (
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_job_dive_17 ON
    medsdata.dive_site_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.si_divesite ON
    medsdata.dive_site_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_posn_dive_7 ON
    medsdata.dive_site_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.duc_format (
    data_use_code   VARCHAR2(50),
    description     VARCHAR2(200),
    classification  VARCHAR2(200),
    short_desc      VARCHAR2(20)
)
LOGGING;

CREATE TABLE medsdata.eddy_data (
    water_types_present          VARCHAR2(400),
    major_axis                   VARCHAR2(100),
    minor_axis                   VARCHAR2(100),
    core_temperature             VARCHAR2(100),
    temperature_core             VARCHAR2(100),
    temperature_edge             VARCHAR2(100),
    salinity_core                VARCHAR2(100),
    salinity_edge                VARCHAR2(100),
    density_core                 VARCHAR2(200),
    density_edge                 VARCHAR2(100),
    eddy_centre_depth            VARCHAR2(100),
    authors                      VARCHAR2(200),
    title                        VARCHAR2(200),
    journal_report               VARCHAR2(300),
    volume                       VARCHAR2(100),
    pages                        VARCHAR2(100),
    publication_date             VARCHAR2(100),
    max_u__theta_                VARCHAR2(100),
    propagation_speed            VARCHAR2(100),
    depth_of_p_therm             VARCHAR2(100),
    propagation_direction        VARCHAR2(100),
    depth_of_s_therm             VARCHAR2(100),
    comment_h                    VARCHAR2(800),
    depth_to_bottom              VARCHAR2(100),
    sea_floor_region             VARCHAR2(100),
    comment_z                    VARCHAR2(800),
    eddy_rotation                VARCHAR2(100),
    eddy_depth_descriptor        VARCHAR2(100),
    propogation_characteristics  VARCHAR2(200),
    oxygen_core                  VARCHAR2(100),
    oxygen_edge                  VARCHAR2(100),
    comment_ay                   VARCHAR2(800),
    meds_observation_number      NUMBER(10),
    meds_job_number              NUMBER(10),
    eddy_type                    VARCHAR2(100),
    major_axis_orientation       VARCHAR2(100),
    max_u_theta_characteristics  VARCHAR2(400),
    origin                       VARCHAR2(100),
    comment_ap                   VARCHAR2(800),
    density_diff_p_therm         VARCHAR2(100),
    density_diff_s_therm         VARCHAR2(100)
)
LOGGING;

CREATE INDEX medsdata.idx_date_eddy_13 ON
    medsdata.eddy_data (
        publication_date
    ASC );

CREATE INDEX medsdata.idx_job_eddy_18 ON
    medsdata.eddy_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.eddy_observation (
    lifetime                 VARCHAR2(100),
    duration_of_observation  VARCHAR2(100),
    comment_s                VARCHAR2(600),
    eddy_name                VARCHAR2(100),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    cruise_information       VARCHAR2(600),
    instrument               VARCHAR2(600),
    observation_year         VARCHAR2(20),
    observation_month        VARCHAR2(40),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    location                 mdsys.sdo_geometry,
    database_reference       VARCHAR2(20),
    data_available           VARCHAR2(300)
)
LOGGING;

CREATE INDEX medsdata.idx_job_eddy_19 ON
    medsdata.eddy_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.si_eddyobservati ON
    medsdata.eddy_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_posn_eddy_8 ON
    medsdata.eddy_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.eddy_repeat (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    depth                    NUMBER(8),
    density                  NUMBER(12, 3),
    temperature              NUMBER(12, 3),
    radius                   NUMBER(12, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_job_eddy_20 ON
    medsdata.eddy_repeat (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.eddy_satellite_data (
    eddy_number              VARCHAR2(20),
    first_year_observed      VARCHAR2(20),
    swirl_velocity           VARCHAR2(20),
    major_axis_length        VARCHAR2(20),
    minor_axis_length        VARCHAR2(20),
    major_axis_orientation   VARCHAR2(20),
    eddy_sst                 VARCHAR2(20),
    eddy_type                VARCHAR2(20),
    eddy_gradient            VARCHAR2(20),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    eddy_frontal_depth       VARCHAR2(20),
    eddy_confidence          NUMBER(8),
    eddy_id                  NUMBER(10),
    eddy_boundary_type       VARCHAR2(20),
    centre_latitude          NUMBER(12, 6),
    centre_longitude         NUMBER(12, 6),
    eddy_front_type          VARCHAR2(20),
    parent_feature           VARCHAR2(100)
)
LOGGING;

CREATE INDEX medsdata.idx_job_eddy_21 ON
    medsdata.eddy_satellite_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.eddy_satellite_observation (
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    eddy_observed_date       DATE
)
LOGGING;

CREATE INDEX medsdata.idx_date_eddy_14 ON
    medsdata.eddy_satellite_observation (
        eddy_observed_date
    ASC );

CREATE INDEX medsdata.si_eddysatellite ON
    medsdata.eddy_satellite_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_job_eddy_22 ON
    medsdata.eddy_satellite_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.eddy_satellite_repeat (
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    vertex_id                NUMBER(20),
    point_order              NUMBER(8),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE TABLE medsdata.eventlog (
    id              NUMBER(10) NOT NULL,
    userid          VARCHAR2(50),
    workstation     VARCHAR2(50),
    eventdetails    VARCHAR2(4000),
    eventtypeid     NUMBER(10),
    eventdatetime   DATE,
    verbosedetails  VARCHAR2(4000)
)
LOGGING;

CREATE TABLE medsdata.eventtype (
    id           NUMBER(10) NOT NULL,
    description  VARCHAR2(50)
)
LOGGING;

CREATE TABLE medsdata.exchange_list (
    meic_number     NUMBER,
    description     VARCHAR2(32),
    supplier        VARCHAR2(64),
    classification  VARCHAR2(50),
    source          VARCHAR2(20),
    comments        VARCHAR2(512),
    databased       DATE
)
LOGGING;

CREATE TABLE medsdata.extraction_option_lookup (
    data_type_index  NUMBER(8),
    extraction_type  NUMBER(8),
    table_name       VARCHAR2(50),
    field_name_one   VARCHAR2(50),
    field_name_two   VARCHAR2(50),
    caption          VARCHAR2(50),
    user_name        VARCHAR2(100)
)
LOGGING;

CREATE TABLE medsdata.extraction_types_lookup (
    desciption       VARCHAR2(50),
    extraction_type  NUMBER(8)
)
LOGGING;

CREATE TABLE medsdata.field_lookup (
    data_type_index    NUMBER(8),
    field_name         VARCHAR2(50) NOT NULL,
    field_type         VARCHAR2(10) DEFAULT 'S',
    field_position     NUMBER(8) DEFAULT 0,
    field_width        NUMBER(8) DEFAULT 0,
    include_in_input   NUMBER(1) DEFAULT 0,
    include_in_output  NUMBER(1) DEFAULT 0,
    field_size         NUMBER(8) DEFAULT 0,
    field_precision    NUMBER(8) DEFAULT 0,
    table_name         VARCHAR2(50),
    update_method      NUMBER(8) DEFAULT 0,
    file_extension     VARCHAR2(20),
    repeat_id          NUMBER(8) DEFAULT 0,
    table_index        VARCHAR2(50),
    field_index        VARCHAR2(50),
    repeat_value       VARCHAR2(50),
    repeat_offset      NUMBER(8) DEFAULT 0,
    repeat_count       NUMBER(8) DEFAULT 0,
    file_type          NUMBER(1) DEFAULT 0,
    table_order        NUMBER(2) DEFAULT 0,
    column_name        VARCHAR2(50),
    bin_size           NUMBER(12) DEFAULT NULL,
    sort_order         NUMBER(2) DEFAULT 0
)
LOGGING;

CREATE INDEX medsdata.idx_field_lookup_datatypeindex ON
    medsdata.field_lookup (
        data_type_index
    ASC );

CREATE INDEX medsdata.idx_fieldlokkup_tabname ON
    medsdata.field_lookup (
        table_name
    ASC );

CREATE TABLE medsdata.field_lookup_check (
    table_name    VARCHAR2(50),
    field_name    VARCHAR2(50),
    field_exists  NUMBER
)
LOGGING;

CREATE TABLE medsdata.field_lookup_dup (
    data_type_index    NUMBER(8),
    field_name         VARCHAR2(50) NOT NULL,
    field_type         VARCHAR2(10) DEFAULT 'S',
    field_position     NUMBER(8) DEFAULT 0,
    field_width        NUMBER(8) DEFAULT 0,
    include_in_input   NUMBER(1) DEFAULT 0,
    include_in_output  NUMBER(1) DEFAULT 0,
    field_size         NUMBER(8) DEFAULT 0,
    field_precision    NUMBER(8) DEFAULT 0,
    table_name         VARCHAR2(50),
    update_method      NUMBER(8) DEFAULT 0,
    file_extension     VARCHAR2(20),
    repeat_id          NUMBER(8) DEFAULT 0,
    table_index        VARCHAR2(50),
    field_index        VARCHAR2(50),
    repeat_value       VARCHAR2(50),
    repeat_offset      NUMBER(8) DEFAULT 0,
    repeat_count       NUMBER(8) DEFAULT 0,
    file_type          NUMBER(1) DEFAULT 0,
    table_order        NUMBER(2) DEFAULT 0,
    column_name        VARCHAR2(50),
    bin_size           NUMBER(12) DEFAULT NULL,
    sort_order         NUMBER(2) DEFAULT 0
)
LOGGING;

CREATE TABLE medsdata.file_lookup (
    file_name  VARCHAR2(32) NOT NULL,
    path_name  VARCHAR2(128) NOT NULL,
    argument   VARCHAR2(64),
    argument2  VARCHAR2(64)
)
LOGGING;

CREATE TABLE medsdata.file_path_lookup (
    file_path  VARCHAR2(256),
    user_name  VARCHAR2(50)
)
LOGGING;

CREATE TABLE medsdata.flag_types_lookup (
    flag_type_name VARCHAR2(50)
)
LOGGING;

CREATE TABLE medsdata.front_depth_plan_observation (
    feature                  VARCHAR2(50),
    grid_size                VARCHAR2(50),
    location                 mdsys.sdo_geometry,
    survey_dates             VARCHAR2(100),
    depth                    VARCHAR2(50),
    breakpoints              VARCHAR2(20),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    start_date               DATE,
    file_hdr_1               VARCHAR2(100),
    file_hdr_2               VARCHAR2(100),
    file_hdr_3               VARCHAR2(100),
    file_hdr_4               VARCHAR2(100),
    file_hdr_5               VARCHAR2(100),
    file_hdr_6               VARCHAR2(100)
)
LOGGING;

CREATE INDEX medsdata.si_frontdepth ON
    medsdata.front_depth_plan_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_job_front_23 ON
    medsdata.front_depth_plan_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_date_front_15 ON
    medsdata.front_depth_plan_observation (
        start_date
    ASC );

CREATE INDEX medsdata.idx_date_front_16 ON
    medsdata.front_depth_plan_observation (
        survey_dates
    ASC );

CREATE TABLE medsdata.front_depth_plan_repeat (
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    temperature              NUMBER(12, 5),
    salinity                 NUMBER(12, 5),
    sound_speed              NUMBER(12, 5),
    density                  NUMBER(12, 5),
    tsgr                     NUMBER(12, 5),
    ssgr                     NUMBER(12, 5),
    sssgr                    NUMBER(12, 5),
    densgr                   NUMBER(12, 5),
    width                    NUMBER(12, 5),
    code                     VARCHAR2(10),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    point_order              NUMBER(8)
)
LOGGING;

CREATE INDEX medsdata.idx_job_front_24 ON
    medsdata.front_depth_plan_repeat (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_posn_front_10 ON
    medsdata.front_depth_plan_repeat (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.front_fwoc_observation (
    front_name               VARCHAR2(100),
    depth                    VARCHAR2(20),
    breakpoints              VARCHAR2(20),
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    front_date               DATE,
    archive_date             DATE
)
LOGGING;

CREATE INDEX medsdata.idx_job_front_25 ON
    medsdata.front_fwoc_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_date_front_18 ON
    medsdata.front_fwoc_observation (
        front_date
    ASC );

CREATE INDEX medsdata.idx_date_front_17 ON
    medsdata.front_fwoc_observation (
        archive_date
    ASC );

CREATE INDEX medsdata.si_frontfwoc ON
    medsdata.front_fwoc_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE TABLE medsdata.front_fwoc_repeat (
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    point_order              NUMBER(8)
)
LOGGING;

CREATE INDEX medsdata.idx_job_front_26 ON
    medsdata.front_fwoc_repeat (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_posn_front_11 ON
    medsdata.front_fwoc_repeat (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.front_grid_data (
    meds_job_number          NUMBER(10),
    front_name               VARCHAR2(50),
    region                   VARCHAR2(50),
    duration                 VARCHAR2(50),
    depth                    VARCHAR2(20),
    source                   VARCHAR2(50),
    dates                    VARCHAR2(50),
    resolution               VARCHAR2(20),
    analysed                 VARCHAR2(20),
    creator                  VARCHAR2(50),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_job_front_27 ON
    medsdata.front_grid_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_date_front_19 ON
    medsdata.front_grid_data (
        dates
    ASC );

CREATE TABLE medsdata.front_grid_observation (
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    location                 mdsys.sdo_geometry,
    identifier               VARCHAR2(20),
    trh_latitude             NUMBER(12, 8),
    trh_longitude            NUMBER(12, 8),
    blh_longitude            NUMBER(12, 8),
    blh_latitude             NUMBER(12, 8)
)
LOGGING;

CREATE INDEX medsdata.si_frontgrid ON
    medsdata.front_grid_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_job_front_28 ON
    medsdata.front_grid_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.front_grid_repeat (
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    count                    VARCHAR2(20),
    occupancy                VARCHAR2(20),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    total                    VARCHAR2(20),
    point_order              NUMBER(8)
)
LOGGING;

CREATE INDEX medsdata.idx_posn_front_12 ON
    medsdata.front_grid_repeat (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_job_front_29 ON
    medsdata.front_grid_repeat (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.front_image_data (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    point_type               VARCHAR2(20),
    frontal_gradient         VARCHAR2(20),
    frontal_depth            VARCHAR2(20),
    frontal_name             VARCHAR2(100),
    frontal_type             VARCHAR2(20),
    frontal_confidence       VARCHAR2(20),
    frontal_line_id          NUMBER(10),
    boundary_type            VARCHAR2(20)
)
LOGGING;

CREATE INDEX medsdata.idx_job_front_30 ON
    medsdata.front_image_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.front_image_repeat (
    latitude                 NUMBER,
    longitude                NUMBER,
    confidence               VARCHAR2(20),
    strength                 VARCHAR2(20),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    point_order              NUMBER(8),
    vertex_id                NUMBER(10)
)
LOGGING;

CREATE TABLE medsdata.front_mean_data (
    meds_job_number          NUMBER(10),
    front_name               VARCHAR2(100),
    region                   VARCHAR2(100),
    boundary                 VARCHAR2(100),
    property                 VARCHAR2(100),
    front_type               VARCHAR2(100),
    duration                 VARCHAR2(100),
    strength                 VARCHAR2(100),
    depth                    VARCHAR2(100),
    level_1                  VARCHAR2(100),
    source                   VARCHAR2(100),
    dates                    VARCHAR2(100),
    observations             VARCHAR2(100),
    resolution               VARCHAR2(100),
    analysed                 VARCHAR2(100),
    creator                  VARCHAR2(100),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_date_front_20 ON
    medsdata.front_mean_data (
        dates
    ASC );

CREATE INDEX medsdata.idx_job_front_32 ON
    medsdata.front_mean_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.front_mean_observation (
    meds_job_number          NUMBER(10),
    location                 mdsys.sdo_geometry,
    line_type                VARCHAR2(20),
    identifier               VARCHAR2(20),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.si_frontmean ON
    medsdata.front_mean_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_job_front_33 ON
    medsdata.front_mean_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.front_mean_repeat (
    meds_job_number          NUMBER(10),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    vertex_id                VARCHAR2(20),
    meds_observation_number  NUMBER(10),
    point_order              NUMBER(8)
)
LOGGING;

CREATE INDEX medsdata.idx_posn_front_14 ON
    medsdata.front_mean_repeat (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_job_front_34 ON
    medsdata.front_mean_repeat (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.front_satellite_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    location                 mdsys.sdo_geometry,
    observered_date          DATE
)
LOGGING;

CREATE INDEX medsdata.idx_date_front_21 ON
    medsdata.front_satellite_observation (
        observered_date
    ASC );

CREATE INDEX medsdata.si_frontsatellite ON
    medsdata.front_satellite_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index PARAMETERS ( 'TABLESPACE=INDX' );

CREATE INDEX medsdata.idx_job_front_35 ON
    medsdata.front_satellite_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.front_survey_data (
    instruments              VARCHAR2(100),
    maximum_depth            VARCHAR2(20),
    number_of_observations   NUMBER(5),
    quality                  VARCHAR2(30),
    filename                 VARCHAR2(500),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    blh_latitude             NUMBER(12, 6),
    trh_latitude             NUMBER(12, 6),
    trh_longitude            NUMBER(12, 6),
    blh_longitude            NUMBER(12, 6)
)
LOGGING;

CREATE INDEX medsdata.idx_job_front_36 ON
    medsdata.front_survey_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.front_survey_observation (
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    start_date               DATE,
    end_date                 DATE
)
LOGGING;

CREATE INDEX medsdata.idx_date_front_22 ON
    medsdata.front_survey_observation (
        end_date
    ASC );

CREATE INDEX medsdata.si_frontsurvey ON
    medsdata.front_survey_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_job_front_37 ON
    medsdata.front_survey_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_date_front_23 ON
    medsdata.front_survey_observation (
        start_date
    ASC );

CREATE TABLE medsdata.front_transect_observation (
    transect_feature         VARCHAR2(50),
    location                 mdsys.sdo_geometry,
    bearing                  VARCHAR2(20),
    transect_dates           VARCHAR2(300),
    breakpoints              VARCHAR2(20),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    start_date               DATE,
    mean_values              VARCHAR2(100),
    file_hdr_1               VARCHAR2(100),
    file_hdr_2               VARCHAR2(100),
    file_hdr_3               VARCHAR2(100),
    file_hdr_4               VARCHAR2(100),
    file_hdr_5               VARCHAR2(100),
    file_hdr_6               VARCHAR2(100),
    file_hdr_7               VARCHAR2(100)
)
LOGGING;

CREATE INDEX medsdata.idx_job_front_38 ON
    medsdata.front_transect_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_date_front_24 ON
    medsdata.front_transect_observation (
        start_date
    ASC );

CREATE INDEX medsdata.si_fronttransect ON
    medsdata.front_transect_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_date_front_25 ON
    medsdata.front_transect_observation (
        transect_dates
    ASC );

CREATE TABLE medsdata.front_transect_repeat (
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    depth                    NUMBER(12, 5),
    temperature              NUMBER(12, 5),
    salinity                 NUMBER(12, 5),
    sound_speed              NUMBER(12, 5),
    density                  NUMBER(12, 5),
    tsgr                     NUMBER(12, 5),
    ssgr                     NUMBER(12, 5),
    sssgr                    NUMBER(12, 5),
    densgr                   NUMBER(12, 5),
    code                     VARCHAR2(10),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    slope                    VARCHAR2(50),
    width                    VARCHAR2(20),
    point_order              NUMBER(8)
)
LOGGING;

CREATE INDEX medsdata.idx_job_front_39 ON
    medsdata.front_transect_repeat (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_posn_front_15 ON
    medsdata.front_transect_repeat (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.generic_edit (
    row_type              VARCHAR2(20) NOT NULL,
    table_name            VARCHAR2(30) NOT NULL,
    column_name           VARCHAR2(30),
    column_header         VARCHAR2(30),
    column_order          NUMBER,
    text_search           NUMBER,
    combo_search          NUMBER,
    data_type_alias       VARCHAR2(30),
    date_record_name      VARCHAR2(30),
    allow_time            NUMBER(1),
    date_required         NUMBER(1),
    cruise_required       NUMBER(1),
    date_search_required  NUMBER(1),
    has_track             NUMBER(1) DEFAULT 0,
    job_type_description  VARCHAR2(30) DEFAULT NULL
)
LOGGING;

ALTER TABLE medsdata.generic_edit ADD CONSTRAINT generic_edit_uk0 UNIQUE ( data_type_alias )
    USING INDEX;

CREATE TABLE medsdata.geology_param_data (
    sea_bed_type__old_              NUMBER(2),
    sea_bed_type__new_              NUMBER(2),
    sea_bed_sediment_thickness      NUMBER(3),
    bedrock_type                    NUMBER(2),
    bedrock_lithology               NUMBER(3),
    bedrock_id                      VARCHAR2(10),
    bathmetry                       NUMBER(5),
    gas_type                        NUMBER(2),
    gas_depth                       NUMBER(4),
    number_bulk_sediment_layers     NUMBER(3),
    master_bulk_sediment_layer      NUMBER(3),
    master_bulk_sediment_thickness  NUMBER(4),
    meds_job_number                 NUMBER(10),
    meds_observation_number         NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_job_geology_40 ON
    medsdata.geology_param_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.geology_param_observation (
    longitude                NUMBER(12, 6),
    latitude                 NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_job_geology_41 ON
    medsdata.geology_param_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.si_geologyparam ON
    medsdata.geology_param_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_posn_geology_16 ON
    medsdata.geology_param_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.geology_quality_data (
    sediment_type_confidence        NUMBER(3),
    sediment_type_data              NUMBER(3),
    sediment_thickness_confidence   NUMBER(3),
    sediment_thickness_data         NUMBER(3),
    bedrock_type_confidence         NUMBER(3),
    bedrock_type_data               NUMBER(3),
    bedrock_lith_id_confidence      NUMBER(3),
    bedrock_lith_id_data            NUMBER(3),
    bathymetry_confidence           NUMBER(3),
    bathymetry_data                 NUMBER(3),
    gas_type_data                   NUMBER(3),
    gas_type_confidence             NUMBER(3),
    gas_depth_data                  NUMBER(3),
    gas_depth_confidence            NUMBER(3),
    bulk_layers_confidence          NUMBER(3),
    bulk_layers_data_code           NUMBER(3),
    master_bsl                      NUMBER(3),
    master_bsl_data                 NUMBER(3),
    master_bsl_thickness_confidenc  NUMBER(3),
    master_bsl_thickness_code       NUMBER(3),
    meds_observation_number         NUMBER(10),
    meds_job_number                 NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_job_geology_42 ON
    medsdata.geology_quality_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.geology_quality_observation (
    longitude                NUMBER(12, 6),
    latitude                 NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_posn_geology_17 ON
    medsdata.geology_quality_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.si_geologyqualit ON
    medsdata.geology_quality_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_job_geology_43 ON
    medsdata.geology_quality_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.glider_threaded_data (
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    depth                    NUMBER(12, 4),
    pressure                 NUMBER(12, 4),
    temperature              NUMBER(12, 4),
    temp_flag                NUMBER(3),
    salinity                 NUMBER(12, 4),
    sal_flag                 NUMBER(3),
    sound_speed              NUMBER(12, 4),
    density                  NUMBER(12, 4),
    chlorophyll              NUMBER(20, 10),
    hydrocarbons             NUMBER(20, 10),
    gelbstoffe               NUMBER(20, 10),
    bioluminescence          NUMBER(20, 10),
    longitude                NUMBER(12, 6),
    latitude                 NUMBER(12, 6),
    date_recorded            DATE,
    point_order              NUMBER(8),
    bbp700                   NUMBER(20, 10)
)
LOGGING;

CREATE INDEX medsdata.idx_glider_threaded_data_job ON
    medsdata.glider_threaded_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.glider_threaded_observation (
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    mid_latitude             NUMBER(12, 6),
    mid_longitude            NUMBER(12, 6),
    profile_id               NUMBER(10),
    profile_dir              NUMBER(2),
    distance_traveled        NUMBER(12, 4),
    mid_time                 NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.si_glider_threaded_x ON
    medsdata.glider_threaded_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index PARAMETERS ( 'TABLESPACE=INDX' );

CREATE INDEX medsdata.idx_glider_threaded_job ON
    medsdata.glider_threaded_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.help (
    topic  VARCHAR2(50) NOT NULL,
    seq    NUMBER NOT NULL,
    info   VARCHAR2(80)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.help_topic_seq ON
    medsdata.help (
        topic
    ASC,
        seq
    ASC );

ALTER TABLE medsdata.help
    ADD CONSTRAINT help_topic_seq PRIMARY KEY ( topic,
                                                seq )
        USING INDEX medsdata.help_topic_seq;

CREATE TABLE medsdata.ices_ship_desc (
    ices_ship_code    VARCHAR2(4),
    code_description  VARCHAR2(200)
)
LOGGING;

CREATE TABLE medsdata.ingres_rows_per_job (
    booking_job  NUMBER(*, 0),
    n_rows       NUMBER(*, 0)
)
LOGGING;

CREATE TABLE medsdata.instrument (
    ocean        NUMBER(4),
    description  VARCHAR2(200),
    nebt         VARCHAR2(2),
    serd         VARCHAR2(4) NOT NULL,
    nodef_       VARCHAR2(4),
    data_type    NUMBER(1)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.instrument_idx ON
    medsdata.instrument (
        serd
    ASC );

CREATE UNIQUE INDEX medsdata.idx_instrument_ocean ON
    medsdata.instrument (
        ocean
    ASC );

ALTER TABLE medsdata.instrument
    ADD CONSTRAINT instrument_idx PRIMARY KEY ( serd )
        USING INDEX medsdata.instrument_idx;

CREATE TABLE medsdata.internal_wave_data (
    general_description          VARCHAR2(150),
    long_length_scale            NUMBER(12, 3),
    short_length_scale           NUMBER(12, 3),
    measurement                  VARCHAR2(200),
    speed                        VARCHAR2(30),
    propagation_distance         VARCHAR2(100),
    figures                      VARCHAR2(100),
    authors                      VARCHAR2(200),
    title                        VARCHAR2(200),
    journal_report               VARCHAR2(300),
    volume                       VARCHAR2(100),
    pages                        VARCHAR2(30),
    publication_date             VARCHAR2(50),
    cross_reference              VARCHAR2(50),
    wave_period                  NUMBER(12, 3),
    marsden_square               VARCHAR2(20),
    meds_observation_number      NUMBER(10),
    meds_job_number              NUMBER(10),
    other                        VARCHAR2(200),
    bathymetry                   VARCHAR2(300),
    survey_identifier            VARCHAR2(150),
    location_longitude           VARCHAR2(40),
    location_latitude            VARCHAR2(50),
    oceanography                 VARCHAR2(500),
    meteorology                  VARCHAR2(300),
    wavelength                   VARCHAR2(100),
    instrument                   VARCHAR2(150),
    iw_period                    VARCHAR2(200),
    repeat_period                VARCHAR2(150),
    proposed_generating_mech     VARCHAR2(500),
    description                  VARCHAR2(500),
    iw_direction_of_propagation  VARCHAR2(150),
    observed_date                VARCHAR2(75),
    book_editor_publisher        VARCHAR2(150),
    thermocline_pycnocline       VARCHAR2(100),
    iw_speed_obs                 VARCHAR2(100),
    iw_amplitude_obs             VARCHAR2(150),
    depth                        VARCHAR2(50),
    amplitude                    VARCHAR2(100)
)
LOGGING;

CREATE INDEX medsdata.idx_date_internal_27 ON
    medsdata.internal_wave_data (
        publication_date
    ASC );

CREATE INDEX medsdata.idx_date_internal_26 ON
    medsdata.internal_wave_data (
        observed_date
    ASC );

CREATE INDEX medsdata.idx_job_internal_44 ON
    medsdata.internal_wave_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.internal_wave_observation (
    latitude                        NUMBER(12, 6),
    longitude                       NUMBER(12, 6),
    location                        mdsys.sdo_geometry,
    database_identification_number  VARCHAR2(20),
    month                           VARCHAR2(20),
    meds_job_number                 NUMBER(10),
    meds_observation_number         NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.si_internalwave ON
    medsdata.internal_wave_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_posn_internal_18 ON
    medsdata.internal_wave_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_job_internal_45 ON
    medsdata.internal_wave_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.internal_wave_repeat (
    direction                VARCHAR2(20),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_job_internal_46 ON
    medsdata.internal_wave_repeat (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.ipr_lookup (
    ipr_owner_type   VARCHAR2(100),
    ipr_period       DATE,
    ipr_owner        VARCHAR2(50),
    rights           NUMBER(1),
    foi_exempt       NUMBER(1),
    foi_declare      NUMBER(1),
    confidentiality  NUMBER(1)
)
LOGGING;

CREATE TABLE medsdata.ipr_owner_contact (
    owner       VARCHAR2(50),
    owner_code  NUMBER(10)
)
LOGGING;

CREATE TABLE medsdata.ipr_owner_type (
    desription  VARCHAR2(50),
    type        NUMBER(3)
)
LOGGING;

CREATE TABLE medsdata.iw_image_data (
    feature_type             VARCHAR2(100),
    feature_name             VARCHAR2(100),
    ocean_area               VARCHAR2(100),
    latitude_nw              VARCHAR2(50),
    latitude_ne              VARCHAR2(50),
    latitude_se              VARCHAR2(50),
    latitude_sw              VARCHAR2(50),
    orbit_number             VARCHAR2(50),
    image_source             VARCHAR2(100),
    storage_format           VARCHAR2(50),
    archive_date             DATE,
    additional_information   VARCHAR2(500),
    file_reference           VARCHAR2(100),
    longitude_ne             VARCHAR2(50),
    longitude_sw             VARCHAR2(50),
    longitude_nw             VARCHAR2(50),
    longitude_se             VARCHAR2(50),
    project_of_image         VARCHAR2(50),
    image_file_reference     VARCHAR2(500),
    number_of_wave_packets   VARCHAR2(20),
    instrument               VARCHAR2(50),
    measurement              VARCHAR2(50),
    satellite                VARCHAR2(50),
    time_of_tide             VARCHAR2(20),
    source_of_tide_info      VARCHAR2(100),
    frame_number             VARCHAR2(20),
    original_image_product   VARCHAR2(100),
    original_x_resolution    VARCHAR2(20),
    original_y_resolution    VARCHAR2(20),
    stored_x_resolution      VARCHAR2(20),
    stored_y_resolution      VARCHAR2(20),
    x_size                   VARCHAR2(20),
    y_size                   VARCHAR2(20),
    meds_job_number          NUMBER(10),
    meds_observation_number  VARCHAR2(10)
)
LOGGING;

CREATE INDEX medsdata.idx_job_iw_47 ON
    medsdata.iw_image_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_date_iw_28 ON
    medsdata.iw_image_data (
        archive_date
    ASC );

CREATE TABLE medsdata.iw_image_observation (
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    recorded_date            DATE,
    image_id                 VARCHAR2(20),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.si_iwimage ON
    medsdata.iw_image_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_date_iw_29 ON
    medsdata.iw_image_observation (
        recorded_date
    ASC );

CREATE INDEX medsdata.idx_posn_iw_19 ON
    medsdata.iw_image_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_job_iw_48 ON
    medsdata.iw_image_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.iw_packets (
    meds_job_number           NUMBER(10),
    meds_observation_number   NUMBER(10),
    wave_packet_id            VARCHAR2(20),
    number_of_waves           VARCHAR2(20),
    latitude_focal_pt         VARCHAR2(20),
    longitude_focal_pt        VARCHAR2(20),
    focal_radius              VARCHAR2(20),
    estimated_focal_error     VARCHAR2(20),
    focal_point_flag          VARCHAR2(20),
    lead_wave_length          VARCHAR2(20),
    lead_wave_curvature       VARCHAR2(20),
    lead_wave_prop_dir        VARCHAR2(20),
    prop_direction_comment    VARCHAR2(500),
    distance_between_packets  VARCHAR2(20),
    distance_calc_packets     VARCHAR2(20),
    comments                  VARCHAR2(500),
    min_lat_breakpoints       VARCHAR2(20),
    min_lon_breakpoints       VARCHAR2(20),
    max_lat_breakpoints       VARCHAR2(20),
    max_lon_breakpoints       VARCHAR2(20)
)
LOGGING;

CREATE INDEX medsdata.idx_job_iw_49 ON
    medsdata.iw_packets (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.iw_points (
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    break_point_id           VARCHAR2(20),
    point_latitude           VARCHAR2(20),
    point_longitude          VARCHAR2(20),
    propogation_direction    VARCHAR2(20)
)
LOGGING;

CREATE INDEX medsdata.idx_job_iw_50 ON
    medsdata.iw_points (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.iw_waves (
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    individual_wave_id       VARCHAR2(20),
    crest_length             VARCHAR2(20),
    mean_wave_seperation     VARCHAR2(20),
    min_wave_seperation      VARCHAR2(20),
    max_wave_seperation      VARCHAR2(20),
    number_of_breakpoints    VARCHAR2(20),
    brightness               VARCHAR2(50)
)
LOGGING;

CREATE INDEX medsdata.idx_job_iw_51 ON
    medsdata.iw_waves (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.job (
    job_number       NUMBER(6),
    date_of_receipt  DATE,
    orig_initials    VARCHAR2(6),
    period_start     DATE,
    period_end       DATE,
    priority_area    NUMBER(2),
    source           VARCHAR2(20),
    vessel_name      VARCHAR2(20),
    media_type       VARCHAR2(20),
    raw_preprocess   VARCHAR2(10),
    classification   VARCHAR2(20),
    remarks          VARCHAR2(70),
    num_obs          NUMBER(6),
    target_date      DATE
)
LOGGING;

CREATE TABLE medsdata.job_error (
    job_number    NUMBER,
    job_type      NUMBER,
    error_number  NUMBER,
    num_error     NUMBER
)
LOGGING;

CREATE TABLE medsdata.job_lookups (
    type            VARCHAR2(20),
    description     VARCHAR2(50),
    usage           VARCHAR2(50),
    index_field     NUMBER(8),
    generic         NUMBER(1),
    text_file_type  NUMBER(1),
    file_extension  VARCHAR2(50),
    duc_position    NUMBER(4)
)
LOGGING;

CREATE INDEX medsdata.idx_joblook_type ON
    medsdata.job_lookups (
        type
    ASC );

CREATE TABLE medsdata.job_stats (
    description        VARCHAR2(30) NOT NULL,
    period_start       DATE NOT NULL,
    period_end         DATE NOT NULL,
    received           NUMBER,
    accepted           NUMBER,
    rejected           NUMBER,
    on_time            NUMBER,
    late               NUMBER,
    month_late_1       NUMBER,
    month_late_1_3     NUMBER,
    month_late_3_6     NUMBER,
    late_greater_6     NUMBER,
    waiting            NUMBER,
    waiting_on_time    NUMBER,
    waiting_late       NUMBER,
    waiting_late_1     NUMBER,
    waiting_late_1_3   NUMBER,
    waiting_late_3_6   NUMBER,
    waiting_greater_6  NUMBER
)
LOGGING;

CREATE TABLE medsdata.job_stats_settings (
    value          NUMBER NOT NULL,
    day            NUMBER NOT NULL,
    month          VARCHAR2(16) NOT NULL,
    year           NUMBER NOT NULL,
    interval       VARCHAR2(16) NOT NULL,
    num_intervals  NUMBER NOT NULL,
    total          NUMBER NOT NULL
)
LOGGING;

CREATE TABLE medsdata.job_tracking (
    meic_number              NUMBER NOT NULL,
    po_number                NUMBER,
    po_task                  CHAR(1),
    status                   CHAR(16) NOT NULL,
    job_type_number          NUMBER NOT NULL,
    ingres_no                NUMBER,
    date_received            DATE,
    supplier                 VARCHAR2(64),
    source                   VARCHAR2(30),
    classification           VARCHAR2(50),
    assigned                 VARCHAR2(16),
    acknowledge              CHAR(1) NOT NULL,
    priority_region1         CHAR(1) NOT NULL,
    priority_region2         CHAR(1) NOT NULL,
    priority_region3         CHAR(1) NOT NULL,
    priority_region4         CHAR(1) NOT NULL,
    priority_region5         CHAR(1) NOT NULL,
    priority_region6         CHAR(1) NOT NULL,
    no_obs                   NUMBER,
    obs_accepted             NUMBER,
    obs_rejected             NUMBER,
    collection_start         DATE,
    collection_end           DATE,
    qa_processing_target     DATE,
    qa_processing_completed  DATE,
    qa_processing_name       VARCHAR2(16),
    databased                DATE,
    databased_name           VARCHAR2(16),
    validated                DATE,
    validated_name           VARCHAR2(16),
    comments                 VARCHAR2(512)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.pk_job_tracking ON
    medsdata.job_tracking (
        meic_number
    ASC );

ALTER TABLE medsdata.job_tracking
    ADD CONSTRAINT pk_job_tracking PRIMARY KEY ( meic_number )
        USING INDEX medsdata.pk_job_tracking;

CREATE TABLE medsdata.job_type (
    job_number           NUMBER(6),
    job_type             NUMBER(4),
    processing_complete  DATE,
    processor_initials   VARCHAR2(8),
    validation_complete  DATE,
    validator_initials   VARCHAR2(8),
    database_updated     DATE,
    updator_initials     VARCHAR2(8),
    num_jobs_accepted    NUMBER(6),
    num_jobs_rejected    NUMBER(6),
    num_duplicates       NUMBER(10)
)
LOGGING;

CREATE TABLE medsdata.layer_criteria_lookup (
    layer_index      NUMBER(10),
    criteria_string  VARCHAR2(4000),
    caption          VARCHAR2(50)
)
LOGGING;

CREATE TABLE medsdata.layer_criteria_lookup_copy (
    layer_index      NUMBER(10),
    criteria_string  VARCHAR2(100),
    caption          VARCHAR2(50)
)
LOGGING;

CREATE TABLE medsdata.layer_lookup (
    layer_sql        VARCHAR2(4000),
    user_name        VARCHAR2(75),
    layer_name       VARCHAR2(150),
    data_type_index  NUMBER(10),
    layer_index      NUMBER(10),
    data_table       VARCHAR2(128) NOT NULL
)
LOGGING;

CREATE TABLE medsdata.level_tables_lookup (
    data_type_index    NUMBER(8),
    table_name         VARCHAR2(50),
    insert_update      NUMBER(1),
    file_extension     VARCHAR2(20),
    level_table_index  NUMBER(8)
)
LOGGING;

CREATE TABLE medsdata.mapinfo_mapcatalog (
    spatialtype       FLOAT(126),
    tablename         VARCHAR2(32),
    ownername         VARCHAR2(32),
    spatialcolumn     VARCHAR2(32),
    db_x_ll           FLOAT(126),
    db_y_ll           FLOAT(126),
    db_x_ur           FLOAT(126),
    db_y_ur           FLOAT(126),
    coordinatesystem  VARCHAR2(254),
    symbol            VARCHAR2(254),
    xcolumnname       VARCHAR2(32),
    ycolumnname       VARCHAR2(32)
)
LOGGING;

CREATE TABLE medsdata.master_grid_d1 (
    location                   mdsys.sdo_geometry,
    grid_index                 NUMBER(8),
    job_profile_jan            NUMBER(8),
    job_profile_feb            NUMBER(8),
    job_profile_mar            NUMBER(8),
    job_profile_apr            NUMBER(8),
    job_profile_may            NUMBER(8),
    job_profile_jun            NUMBER(8),
    job_profile_jul            NUMBER(8),
    job_profile_aug            NUMBER(8),
    job_profile_sep            NUMBER(8),
    job_profile_oct            NUMBER(8),
    job_profile_nov            NUMBER(8),
    job_profile_dec            NUMBER(8),
    job_sea_surface            NUMBER(8),
    job_mixed_layer            NUMBER(8),
    job_species_baleen         NUMBER(8),
    job_species_dolphins       NUMBER(8),
    job_species_porpoises      NUMBER(8),
    job_species_hazards        NUMBER(8),
    job_species_stinging       NUMBER(8),
    job_species_toothed        NUMBER(8),
    job_species_reverberators  NUMBER(8),
    job_pads                   NUMBER(8),
    job_hits                   NUMBER(8),
    job_ambient_omni           NUMBER(8),
    latitude                   NUMBER(12, 3),
    longitude                  NUMBER(12, 3),
    datatype                   VARCHAR2(20) DEFAULT 'GENERIC'
)
LOGGING;

CREATE UNIQUE INDEX medsdata.idx_gridd1_latlon ON
    medsdata.master_grid_d1 (
        latitude
    ASC,
        longitude
    ASC,
        datatype
    ASC );

CREATE INDEX medsdata.si_grid_d1 ON
    medsdata.master_grid_d1 (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE UNIQUE INDEX medsdata.idx_gridd1_gridindex ON
    medsdata.master_grid_d1 (
        grid_index
    ASC,
        datatype
    ASC );

CREATE TABLE medsdata.master_grid_l1 (
    dbdbv_depth                NUMBER(8, 2),
    location                   mdsys.sdo_geometry,
    grid_index                 NUMBER(8),
    job_profile_jan            NUMBER(8),
    job_profile_feb            NUMBER(8),
    job_profile_mar            NUMBER(8),
    job_profile_apr            NUMBER(8),
    job_profile_may            NUMBER(8),
    job_profile_jun            NUMBER(8),
    job_profile_jul            NUMBER(8),
    job_profile_aug            NUMBER(8),
    job_profile_sep            NUMBER(8),
    job_profile_oct            NUMBER(8),
    job_profile_nov            NUMBER(8),
    job_profile_dec            NUMBER(8),
    job_sea_surface            NUMBER(8),
    job_mixed_layer            NUMBER(8),
    job_species_baleen         NUMBER(8),
    job_species_dolphins       NUMBER(8),
    job_species_hazards        NUMBER(8),
    job_species_stinging       NUMBER(8),
    job_species_toothed        NUMBER(8),
    job_species_reverberators  NUMBER(8),
    job_pads                   NUMBER(8),
    job_hits                   NUMBER(8),
    job_ambient_omni           NUMBER(8),
    latitude                   NUMBER(12, 3),
    longitude                  NUMBER(12, 3),
    job_species_porpoise       NUMBER(8),
    job_species_beaked         NUMBER(8),
    datatype                   VARCHAR2(20) DEFAULT 'GENERIC'
)
LOGGING;

CREATE UNIQUE INDEX medsdata.idx_gridl1_latlon ON
    medsdata.master_grid_l1 (
        latitude
    ASC,
        longitude
    ASC,
        datatype
    ASC );

CREATE INDEX medsdata.si_grid_l1 ON
    medsdata.master_grid_l1 (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE UNIQUE INDEX medsdata.idx_gridl1_gridindex ON
    medsdata.master_grid_l1 (
        grid_index
    ASC,
        datatype
    ASC );

CREATE TABLE medsdata.master_grid_l2 (
    dbdbv_depth                NUMBER(8, 2),
    location                   mdsys.sdo_geometry,
    grid_index                 NUMBER(8),
    job_profile_jan            NUMBER(8),
    job_profile_feb            NUMBER(8),
    job_profile_mar            NUMBER(8),
    job_profile_apr            NUMBER(8),
    job_profile_may            NUMBER(8),
    job_profile_jun            NUMBER(8),
    job_profile_jul            NUMBER(8),
    job_profile_aug            NUMBER(8),
    job_profile_sep            NUMBER(8),
    job_profile_oct            NUMBER(8),
    job_profile_nov            NUMBER(8),
    job_profile_dec            NUMBER(8),
    job_sea_surface            NUMBER(8),
    job_mixed_layer            NUMBER(8),
    job_species_baleen         NUMBER(8),
    job_species_dolphins       NUMBER(8),
    job_species_porpoises      NUMBER(8),
    job_species_hazards        NUMBER(8),
    job_species_stinging       NUMBER(8),
    job_species_toothed        NUMBER(8),
    job_species_reverberators  NUMBER(8),
    job_pads                   NUMBER(8),
    job_hits                   NUMBER(8),
    job_ambient_omni           NUMBER(8),
    latitude                   NUMBER(12, 3),
    longitude                  NUMBER(12, 3),
    datatype                   VARCHAR2(20) DEFAULT 'GENERIC'
)
LOGGING;

CREATE UNIQUE INDEX medsdata.idx_gridl2_gridindex ON
    medsdata.master_grid_l2 (
        grid_index
    ASC,
        datatype
    ASC );

CREATE UNIQUE INDEX medsdata.idx_gridl2_latlon ON
    medsdata.master_grid_l2 (
        latitude
    ASC,
        longitude
    ASC,
        datatype
    ASC );

CREATE INDEX medsdata.si_grid_l2 ON
    medsdata.master_grid_l2 (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE TABLE medsdata.master_grid_l4 (
    dbdbv_depth                NUMBER(8, 2),
    location                   mdsys.sdo_geometry,
    grid_index                 NUMBER(8),
    job_profile_jan            NUMBER(8),
    job_profile_feb            NUMBER(8),
    job_profile_mar            NUMBER(8),
    job_profile_apr            NUMBER(8),
    job_profile_may            NUMBER(8),
    job_profile_jun            NUMBER(8),
    job_profile_jul            NUMBER(8),
    job_profile_aug            NUMBER(8),
    job_profile_sep            NUMBER(8),
    job_profile_oct            NUMBER(8),
    job_profile_nov            NUMBER(8),
    job_profile_dec            NUMBER(8),
    job_sea_surface            NUMBER(8),
    job_mixed_layer            NUMBER(8),
    job_species_baleen         NUMBER(8),
    job_species_dolphins       NUMBER(8),
    job_species_porpoises      NUMBER(8),
    job_species_hazards        NUMBER(8),
    job_species_stinging       NUMBER(8),
    job_species_toothed        NUMBER(8),
    job_species_reverberators  NUMBER(8),
    job_pads                   NUMBER(8),
    job_hits                   NUMBER(8),
    job_ambient_omni           NUMBER(8),
    latitude                   NUMBER(12, 3),
    longitude                  NUMBER(12, 3),
    datatype                   VARCHAR2(20) DEFAULT 'GENERIC'
)
LOGGING;

CREATE INDEX medsdata.si_grid_l4 ON
    medsdata.master_grid_l4 (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE UNIQUE INDEX medsdata.idx_gridl4_latlon ON
    medsdata.master_grid_l4 (
        latitude
    ASC,
        longitude
    ASC,
        datatype
    ASC );

CREATE UNIQUE INDEX medsdata.idx_gridl4_gridindex ON
    medsdata.master_grid_l4 (
        grid_index
    ASC,
        datatype
    ASC );

CREATE TABLE medsdata.meds_errors (
    meds_error_type    NUMBER NOT NULL,
    error_description  VARCHAR2(64) NOT NULL
)
LOGGING;

CREATE TABLE medsdata.meds_flags (
    flag_status              NUMBER(1),
    author                   VARCHAR2(100),
    date_entered             DATE,
    comments                 VARCHAR2(500),
    category                 VARCHAR2(20),
    data_type                VARCHAR2(50),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    grid_index               NUMBER(10),
    grid_resolution          NUMBER(2),
    grid_type                VARCHAR2(1),
    grid_temporal            VARCHAR2(10),
    flags_index              NUMBER(10),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    flag_value               VARCHAR2(100)
)
LOGGING;

CREATE INDEX medsdata.idx_flags_job_obs_number ON
    medsdata.meds_flags (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_flags_category ON
    medsdata.meds_flags (
        category
    ASC );

CREATE INDEX medsdata.idx_flags_value ON
    medsdata.meds_flags (
        flag_value
    ASC );

CREATE INDEX medsdata.idx_flags_status ON
    medsdata.meds_flags (
        flag_status
    ASC );

CREATE TABLE medsdata.meds_flags_orig (
    flag_status              NUMBER(1),
    author                   VARCHAR2(100),
    date_entered             DATE,
    comments                 VARCHAR2(500),
    category                 VARCHAR2(20),
    data_type                VARCHAR2(50),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    grid_index               NUMBER(10),
    grid_resolution          NUMBER(2),
    grid_type                VARCHAR2(1),
    grid_temporal            VARCHAR2(10),
    flags_index              NUMBER(10),
    latitude                 NUMBER(10),
    longitude                NUMBER(10),
    flag_value               VARCHAR2(100)
)
LOGGING;

CREATE TABLE medsdata.meds_ipr (
    meds_job_number  NUMBER(10),
    ipr_owner_type   VARCHAR2(100),
    ipr_period       DATE,
    ipr_owner        VARCHAR2(50),
    rights           NUMBER(1),
    foi_exempt       NUMBER(1),
    foi_declare      NUMBER(1),
    confidentiality  NUMBER(1)
)
LOGGING;

CREATE TABLE medsdata.meds_job_error (
    meic_number      NUMBER NOT NULL,
    meds_error_type  NUMBER NOT NULL,
    num_errors       NUMBER NOT NULL
)
LOGGING;

CREATE TABLE medsdata.meds_job_type (
    job_type_number  NUMBER NOT NULL,
    description      VARCHAR2(32)
)
LOGGING;

ALTER TABLE medsdata.meds_job_type ADD CONSTRAINT meds_job_type_pk PRIMARY KEY ( job_type_number )
    USING INDEX;

CREATE TABLE medsdata.meds_processing_job (
    datum_transformation    VARCHAR2(50),
    local_datum             VARCHAR2(50),
    archive_date            DATE,
    comments                VARCHAR2(500),
    job_number              NUMBER(10) NOT NULL,
    booking_job             NUMBER(10),
    processor               VARCHAR2(50),
    date_of_receipt         DATE,
    data_type               VARCHAR2(50),
    protection              VARCHAR2(50),
    caveat                  VARCHAR2(50),
    descriptor              VARCHAR2(50),
    ido                     VARCHAR2(50),
    data_quality            VARCHAR2(50),
    release_conditions      VARCHAR2(50),
    owner_authority_prefix  VARCHAR2(50),
    originator              VARCHAR2(50),
    instrument_code         NUMBER(2),
    meds_ship_number        NUMBER(10),
    meds_cruise_number      NUMBER(10),
    data_use_code           VARCHAR2(20),
    meic_number             NUMBER(10)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.job_layer_idx ON
    medsdata.meds_processing_job (
        job_number
    ASC );

CREATE INDEX medsdata.processing_job_booking_idx ON
    medsdata.meds_processing_job (
        booking_job
    ASC );

CREATE INDEX medsdata.processing_job_ship_idx ON
    medsdata.meds_processing_job (
        meds_ship_number
    ASC );

CREATE INDEX medsdata.archive_date_idx ON
    medsdata.meds_processing_job (
        archive_date
    ASC );

ALTER TABLE medsdata.meds_processing_job
    ADD CONSTRAINT job_layer_idx PRIMARY KEY ( job_number )
        USING INDEX medsdata.job_layer_idx;

CREATE TABLE medsdata.meds_rows_per_job (
    booking_job  NUMBER(*, 0),
    n_rows       NUMBER(*, 0)
)
LOGGING;

CREATE TABLE medsdata.mlo_birds_data (
    record_number            NUMBER(6),
    count_quality            NUMBER(10),
    species                  VARCHAR2(100),
    id_quality               NUMBER(8),
    ship                     VARCHAR2(50),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    archived                 VARCHAR2(25),
    file_reference           VARCHAR2(100),
    comments                 VARCHAR2(500),
    count                    VARCHAR2(20),
    wd_dir                   VARCHAR2(50),
    wd_spd                   VARCHAR2(50)
)
LOGGING;

CREATE INDEX medsdata.idx_job_mlo_52 ON
    medsdata.mlo_birds_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_birds_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE
)
LOGGING;

CREATE INDEX medsdata.idx_date_mlo_32 ON
    medsdata.mlo_birds_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.idx_job_mlo_53 ON
    medsdata.mlo_birds_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.si_mlobirds ON
    medsdata.mlo_birds_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_posn_mlo_20 ON
    medsdata.mlo_birds_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.mlo_cetaceans_data (
    record_number            NUMBER(6),
    count                    VARCHAR2(10),
    count_quality            NUMBER(10),
    species                  VARCHAR2(200),
    id_quality               NUMBER(8),
    heading                  VARCHAR2(50),
    comments                 VARCHAR2(600),
    sst                      NUMBER(8, 3),
    pisces_genus             VARCHAR2(30),
    speed                    NUMBER(8),
    reference                VARCHAR2(100),
    ship                     VARCHAR2(50),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    archived                 VARCHAR2(25),
    size_class               VARCHAR2(20),
    month                    NUMBER(4),
    pisces_species           VARCHAR2(20),
    size_                    VARCHAR2(20),
    meic                     VARCHAR2(20),
    range                    VARCHAR2(20),
    bearing                  VARCHAR2(20),
    person_name              VARCHAR2(100)
)
LOGGING;

CREATE INDEX medsdata.idx_job_mlo_54 ON
    medsdata.mlo_cetaceans_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_cetaceans_envelope (
    envelope           mdsys.sdo_geometry,
    meds_job_number    NUMBER(10),
    meds_track_number  NUMBER(10),
    num_obs            NUMBER(10) DEFAULT 0
)
LOGGING;

CREATE INDEX medsdata.idx_mlo_cetaceans_envelope_job ON
    medsdata.mlo_cetaceans_envelope (
        meds_job_number
    ASC,
        meds_track_number
    ASC );

CREATE INDEX medsdata.si_mlo_cetaceans_envelope ON
    medsdata.mlo_cetaceans_envelope (
        envelope
    )
        INDEXTYPE IS mdsys.spatial_index PARAMETERS ( 'TABLESPACE=INDX' );

CREATE TABLE medsdata.mlo_cetaceans_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE,
    meds_track_number        NUMBER(10) DEFAULT NULL
)
LOGGING;

CREATE INDEX medsdata.idx_job_mlo_55 ON
    medsdata.mlo_cetaceans_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.si_mloceteaceans ON
    medsdata.mlo_cetaceans_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_mlo_cetaceans_track ON
    medsdata.mlo_cetaceans_observation (
        meds_job_number
    ASC,
        meds_track_number
    ASC );

CREATE INDEX medsdata.idx_posn_mlo_21 ON
    medsdata.mlo_cetaceans_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_date_mlo_33 ON
    medsdata.mlo_cetaceans_observation (
        date_recorded
    ASC );

CREATE TABLE medsdata.mlo_cetaceans_track (
    location             mdsys.sdo_geometry,
    meds_job_number      NUMBER(10),
    meds_track_number    NUMBER(10),
    longitude_start      NUMBER(20, 10),
    latitude_start       NUMBER(20, 10),
    date_recorded_start  DATE,
    offset_start         NUMBER(20, 10),
    longitude_end        NUMBER(20, 10),
    latitude_end         NUMBER(20, 10),
    date_recorded_end    DATE,
    offset_end           NUMBER(20, 10),
    ship                 VARCHAR2(50),
    num_obs              NUMBER(10) DEFAULT 0,
    monitoring_type      VARCHAR2(1) DEFAULT 'V',
    period_of_sonar      NUMBER(10) DEFAULT NULL,
    sea_state            NUMBER(10) DEFAULT NULL,
    wind_speed           NUMBER(10) DEFAULT NULL,
    sound_source         VARCHAR2(50) DEFAULT NULL
)
LOGGING;

CREATE INDEX medsdata.idx_mlo_cetaceans_track_date ON
    medsdata.mlo_cetaceans_track (
        date_recorded_start
    ASC );

CREATE INDEX medsdata.idx_mlo_cetaceans_track_job ON
    medsdata.mlo_cetaceans_track (
        meds_job_number
    ASC,
        meds_track_number
    ASC );

CREATE INDEX medsdata.si_mlo_cetaceans_track ON
    medsdata.mlo_cetaceans_track (
        location
    )
        INDEXTYPE IS mdsys.spatial_index PARAMETERS ( 'TABLESPACE=INDX' );

CREATE TABLE medsdata.mlo_columns (
    table_name   VARCHAR2(30) NOT NULL,
    column_name  VARCHAR2(30) NOT NULL,
    edit_order   NUMBER,
    mandatory    NUMBER
)
LOGGING;

CREATE TABLE medsdata.mlo_data_type (
    data_type             VARCHAR2(32),
    processing_job_type   VARCHAR2(50),
    variable_column_name  VARCHAR2(32)
)
LOGGING;

CREATE TABLE medsdata.mlo_fish_data (
    record_number            NUMBER(6),
    count                    VARCHAR2(10),
    species                  VARCHAR2(50),
    id_quality               NUMBER(8),
    heading                  VARCHAR2(50),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    reference                VARCHAR2(100),
    ship                     VARCHAR2(50),
    archived                 VARCHAR2(25),
    comments                 VARCHAR2(500),
    size_                    VARCHAR2(50),
    speed                    VARCHAR2(20),
    month                    VARCHAR2(20),
    count_quality            VARCHAR2(20),
    range                    VARCHAR2(20),
    bearing                  VARCHAR2(20),
    person_name              VARCHAR2(100)
)
LOGGING;

CREATE INDEX medsdata.idx_job_mlo_56 ON
    medsdata.mlo_fish_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_fish_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE
)
LOGGING;

CREATE INDEX medsdata.idx_date_mlo_34 ON
    medsdata.mlo_fish_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.si_mlofish ON
    medsdata.mlo_fish_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_job_mlo_57 ON
    medsdata.mlo_fish_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_posn_mlo_22 ON
    medsdata.mlo_fish_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.mlo_jellyfish_data (
    record_number            NUMBER(6),
    count                    VARCHAR2(20),
    species                  VARCHAR2(50),
    heading                  VARCHAR2(50),
    comments                 VARCHAR2(200),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    reference                VARCHAR2(100),
    ship                     VARCHAR2(50),
    archived                 VARCHAR2(25),
    count_quality            VARCHAR2(20),
    speed                    VARCHAR2(20),
    id_quality               VARCHAR2(20),
    sst                      VARCHAR2(20),
    month                    VARCHAR2(10),
    size_                    VARCHAR2(20),
    bearing                  VARCHAR2(20),
    range                    VARCHAR2(20),
    person_name              VARCHAR2(100)
)
LOGGING;

CREATE INDEX medsdata.idx_job_mlo_58 ON
    medsdata.mlo_jellyfish_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_jellyfish_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE
)
LOGGING;

CREATE INDEX medsdata.idx_job_mlo_59 ON
    medsdata.mlo_jellyfish_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_posn_mlo_23 ON
    medsdata.mlo_jellyfish_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_date_mlo_35 ON
    medsdata.mlo_jellyfish_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.si_mlojellyfish ON
    medsdata.mlo_jellyfish_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE TABLE medsdata.mlo_others_data (
    record_number            NUMBER(6),
    count                    VARCHAR2(10),
    species                  VARCHAR2(500),
    heading                  VARCHAR2(50),
    comments                 VARCHAR2(200),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    reference                VARCHAR2(100),
    ship                     VARCHAR2(50),
    archived                 VARCHAR2(25),
    month                    VARCHAR2(20),
    size_                    VARCHAR2(20),
    count_quality            VARCHAR2(20),
    id_quality               VARCHAR2(20),
    speed                    VARCHAR2(20),
    sst                      VARCHAR2(20),
    wd_dir                   VARCHAR2(50),
    wd_spd                   VARCHAR2(50),
    range                    VARCHAR2(20),
    bearing                  VARCHAR2(20)
)
LOGGING;

CREATE INDEX medsdata.idx_job_mlo_60 ON
    medsdata.mlo_others_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_others_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE
)
LOGGING;

CREATE INDEX medsdata.idx_job_mlo_61 ON
    medsdata.mlo_others_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_date_mlo_36 ON
    medsdata.mlo_others_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.si_mloothers ON
    medsdata.mlo_others_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_posn_mlo_24 ON
    medsdata.mlo_others_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.mlo_pinnipeds_data (
    record_number            NUMBER(6),
    count                    VARCHAR2(10),
    heading                  VARCHAR2(50),
    comments                 VARCHAR2(200),
    species                  VARCHAR2(50),
    reference                VARCHAR2(100),
    ship                     VARCHAR2(50),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    archived                 VARCHAR2(25),
    count_quality            VARCHAR2(20),
    id_quality               VARCHAR2(20),
    code                     VARCHAR2(10),
    speed                    VARCHAR2(20),
    size_                    VARCHAR2(20),
    month                    VARCHAR2(10),
    range                    VARCHAR2(20),
    bearing                  VARCHAR2(20),
    person_name              VARCHAR2(100)
)
LOGGING;

CREATE INDEX medsdata.idx_job_mlo_62 ON
    medsdata.mlo_pinnipeds_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_pinnipeds_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE
)
LOGGING;

CREATE INDEX medsdata.idx_date_mlo_37 ON
    medsdata.mlo_pinnipeds_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.si_mlopinnipeds ON
    medsdata.mlo_pinnipeds_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_posn_mlo_25 ON
    medsdata.mlo_pinnipeds_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_job_mlo_63 ON
    medsdata.mlo_pinnipeds_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_reptiles_data (
    record_number            NUMBER(6),
    count                    VARCHAR2(10),
    species                  VARCHAR2(50),
    heading                  VARCHAR2(50),
    comments                 VARCHAR2(200),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    reference                VARCHAR2(100),
    ship                     VARCHAR2(50),
    archived                 VARCHAR2(25),
    count_quality            VARCHAR2(20),
    size_                    VARCHAR2(20),
    month                    VARCHAR2(10),
    id_quality               VARCHAR2(20),
    speed                    VARCHAR2(20),
    range                    VARCHAR2(20),
    bearing                  VARCHAR2(20),
    person_name              VARCHAR2(100)
)
LOGGING;

CREATE INDEX medsdata.idx_job_mlo_64 ON
    medsdata.mlo_reptiles_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_reptiles_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE
)
LOGGING;

CREATE INDEX medsdata.idx_date_mlo_38 ON
    medsdata.mlo_reptiles_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.idx_posn_mlo_26 ON
    medsdata.mlo_reptiles_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.si_mloreptiles ON
    medsdata.mlo_reptiles_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_job_mlo_65 ON
    medsdata.mlo_reptiles_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_seabed_contact_data (
    meds_job_number             NUMBER(10),
    meds_observation_number     NUMBER(10),
    depth                       NUMBER(12, 4),
    ship                        VARCHAR2(50),
    report_no                   VARCHAR2(20),
    prevailing_weather          VARCHAR2(50),
    bottom_type                 VARCHAR2(10),
    bottom_material             VARCHAR2(50),
    softness_hs_p1              VARCHAR2(50),
    softness_s_p2               NUMBER(8),
    slope                       VARCHAR2(50),
    wreckage_and_debris         VARCHAR2(50),
    marine_life                 VARCHAR2(50),
    marine_growth               VARCHAR2(50),
    visibility_at_seabed        VARCHAR2(50),
    contact_reference           VARCHAR2(20),
    dimensions_length           NUMBER(10, 4),
    dimensions_width            NUMBER(10, 4),
    dimensions_height           NUMBER(10, 4),
    description                 VARCHAR2(500),
    general_location            VARCHAR2(50),
    bottom_material_no          NUMBER(10),
    visibility_at_seabed_depth  NUMBER(12, 4),
    dimensions_measured         VARCHAR2(50)
)
LOGGING;

COMMENT ON COLUMN medsdata.mlo_seabed_contact_data.marine_life IS
    'LOW=1-5 FISH; MEDIUM=6-20 FISH; HIGH=>20 FISH';

COMMENT ON COLUMN medsdata.mlo_seabed_contact_data.marine_growth IS
    'LOW=SLIGHT COVERING; MEDIUM=WELL COVERED BUT VISUAL ID POSSIBLE; HIGH=VERY DENSE VISUAL ID DIFFICULT';

CREATE INDEX medsdata.idx_mlo_seabed_contact_data ON
    medsdata.mlo_seabed_contact_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_seabed_contact_observation (
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    date_recorded            DATE
)
LOGGING;

CREATE INDEX medsdata.idx_mlo_seabed_contact_date ON
    medsdata.mlo_seabed_contact_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.idx_mlo_seabed_contact_job ON
    medsdata.mlo_seabed_contact_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_mlo_seabed_contact_posn ON
    medsdata.mlo_seabed_contact_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.si_mlo_seabed_contact ON
    medsdata.mlo_seabed_contact_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index PARAMETERS ( 'TABLESPACE=INDX' );

CREATE TABLE medsdata.mlo_ship_data (
    record_number            NUMBER(6),
    count                    VARCHAR2(10),
    ship_table               VARCHAR2(200),
    heading                  VARCHAR2(50),
    comments                 VARCHAR2(200),
    code                     NUMBER(4),
    activity                 VARCHAR2(200),
    reference                VARCHAR2(100),
    ship                     VARCHAR2(50),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    archived                 VARCHAR2(25),
    size_                    VARCHAR2(20),
    month                    VARCHAR2(20),
    count_quality            VARCHAR2(20),
    speed                    VARCHAR2(20),
    spare_1                  VARCHAR2(20),
    spare_2                  VARCHAR2(20),
    spare_3                  VARCHAR2(20),
    range                    VARCHAR2(20),
    bearing                  VARCHAR2(20)
)
LOGGING;

CREATE INDEX medsdata.idx_job_mlo_66 ON
    medsdata.mlo_ship_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_ship_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE
)
LOGGING;

CREATE INDEX medsdata.idx_posn_mlo_27 ON
    medsdata.mlo_ship_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.si_mloship ON
    medsdata.mlo_ship_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_date_mlo_39 ON
    medsdata.mlo_ship_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.idx_job_mlo_67 ON
    medsdata.mlo_ship_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_sosus_data (
    record_number            NUMBER(6),
    file_identifier          NUMBER(8),
    track_name               VARCHAR2(20),
    track_number             NUMBER(4),
    species                  VARCHAR2(20),
    month                    NUMBER(2),
    inclination              NUMBER(3),
    major_axis               NUMBER(8, 3),
    minor_axis               NUMBER(8, 3),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_mlo_shipd_job ON
    medsdata.mlo_sosus_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.mlo_sosus_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE,
    latitude                 NUMBER(12, 8),
    longitude                NUMBER(12, 8)
)
LOGGING;

CREATE INDEX medsdata.si_mlo_sosus ON
    medsdata.mlo_sosus_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_date_mlo_sosus ON
    medsdata.mlo_sosus_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.idx_job_mlo_sosus ON
    medsdata.mlo_sosus_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_posn_mlo_sosus ON
    medsdata.mlo_sosus_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.month_lookups (
    month_long   VARCHAR2(30),
    month_short  VARCHAR2(3),
    int_month    NUMBER(2),
    max_days     NUMBER(2)
)
LOGGING;

CREATE TABLE medsdata.observation (
    user_name           CHAR(64) NOT NULL,
    job_number          NUMBER(*, 0) NOT NULL,
    observation_number  NUMBER(*, 0) NOT NULL
)
LOGGING;

CREATE INDEX medsdata.observation_idx2 ON
    medsdata.observation (
        job_number
    ASC );

CREATE INDEX medsdata.observation_idx1 ON
    medsdata.observation (
        user_name
    ASC );

CREATE INDEX medsdata.observation_idx3 ON
    medsdata.observation (
        observation_number
    ASC );

CREATE TABLE medsdata.observations (
    meds_job_number          NUMBER(*, 0) NOT NULL,
    meds_observation_number  NUMBER(*, 0) NOT NULL
)
LOGGING;

CREATE TABLE medsdata.ocean_image_data (
    image_id                 VARCHAR2(20),
    feature_type             VARCHAR2(100),
    feature_name             VARCHAR2(50),
    ocean_area               VARCHAR2(50),
    parameter_observed       VARCHAR2(50),
    satellite                VARCHAR2(50),
    image_size               VARCHAR2(100),
    image_centre             VARCHAR2(100),
    orbit_number             VARCHAR2(20),
    source_of_image          VARCHAR2(100),
    storge_format            VARCHAR2(30),
    archive_date             DATE,
    addition_information     VARCHAR2(100),
    file_ref                 VARCHAR2(500),
    instrument               VARCHAR2(50),
    image_resolution         VARCHAR2(100),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE TABLE medsdata.ocean_image_observation (
    location                 mdsys.sdo_geometry,
    observation_date         DATE,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE TABLE medsdata.omni_ambient_data (
    depth                    VARCHAR2(20),
    wave_height              VARCHAR2(20),
    wind_speed               VARCHAR2(20),
    ofp_number               VARCHAR2(20),
    wind_direction           VARCHAR2(20),
    wave_direction           VARCHAR2(20),
    sea_state                VARCHAR2(20),
    contact_density          VARCHAR2(20),
    s05_10                   VARCHAR2(100),
    s20_50                   VARCHAR2(100),
    contact_details          VARCHAR2(100),
    qc                       VARCHAR2(20),
    record_number            VARCHAR2(20),
    comments                 VARCHAR2(200),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    s00_05                   VARCHAR2(20),
    s10_20                   VARCHAR2(20),
    ship                     VARCHAR2(20),
    country                  VARCHAR2(20),
    platform_type            VARCHAR2(50),
    month                    VARCHAR2(20),
    precipitation            VARCHAR2(50),
    time                     VARCHAR2(25),
    hz_3_15                  NUMBER(15, 6),
    hz_4                     NUMBER(15, 6),
    hz_5                     NUMBER(15, 6),
    hz_6_3                   NUMBER(15, 6),
    hz_8                     NUMBER(15, 6),
    hz_10                    NUMBER(15, 6),
    hz_12_5                  NUMBER(15, 6),
    hz_16                    NUMBER(15, 6),
    hz_20                    NUMBER(15, 6),
    hz_25                    NUMBER(15, 6),
    hz_31_5                  NUMBER(15, 6),
    hz_40                    NUMBER(15, 6),
    hz_50                    NUMBER(15, 6),
    hz_55                    NUMBER(15, 6),
    hz_60                    NUMBER(15, 6),
    hz_63                    NUMBER(15, 6),
    hz_80                    NUMBER(15, 6),
    hz_100                   NUMBER(15, 6),
    hz_115                   NUMBER(15, 6),
    hz_120                   NUMBER(15, 6),
    hz_125                   NUMBER(15, 6),
    hz_135                   NUMBER(15, 6),
    hz_150                   NUMBER(15, 6),
    hz_155                   NUMBER(15, 6),
    hz_160                   NUMBER(15, 6),
    hz_200                   NUMBER(15, 6),
    hz_240                   NUMBER(15, 6),
    hz_248                   NUMBER(15, 6),
    hz_250                   NUMBER(15, 6),
    hz_300                   NUMBER(15, 6),
    hz_305                   NUMBER(15, 6),
    hz_315                   NUMBER(15, 6),
    hz_400                   NUMBER(15, 6),
    hz_440                   NUMBER(15, 6),
    hz_450                   NUMBER(15, 6),
    hz_500                   NUMBER(15, 6),
    hz_600                   NUMBER(15, 6),
    hz_605                   NUMBER(15, 6),
    hz_630                   NUMBER(15, 6),
    hz_660                   NUMBER(15, 6),
    hz_800                   NUMBER(15, 6),
    hz_850                   NUMBER(15, 6),
    hz_1000                  NUMBER(15, 6),
    hz_1150                  NUMBER(15, 6),
    hz_1205                  NUMBER(15, 6),
    hz_1250                  NUMBER(15, 6),
    hz_1500                  NUMBER(15, 6),
    hz_1600                  NUMBER(15, 6),
    hz_1700                  NUMBER(15, 6),
    hz_2000                  NUMBER(15, 6),
    hz_2400                  NUMBER(15, 6),
    hz_2500                  NUMBER(15, 6),
    hz_3150                  NUMBER(15, 6),
    hz_4000                  NUMBER(15, 6),
    hz_5000                  NUMBER(15, 6),
    hz_6300                  NUMBER(15, 6),
    hz_8000                  NUMBER(15, 6),
    hz_75                    NUMBER(15, 6),
    buoy_type                VARCHAR2(20),
    channel                  NUMBER(15, 6),
    hz_950                   NUMBER(15, 6)
)
LOGGING;

CREATE INDEX medsdata.idx_job_omni_68 ON
    medsdata.omni_ambient_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.omni_ambient_observation (
    latitude                 NUMBER(12, 6),
    longitude                NUMBER(12, 6),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE,
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_job_omni_69 ON
    medsdata.omni_ambient_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_date_omni_40 ON
    medsdata.omni_ambient_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.idx_posn_omni_28 ON
    medsdata.omni_ambient_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.si_omniambient ON
    medsdata.omni_ambient_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE TABLE medsdata.originator_code (
    code         VARCHAR2(100),
    description  VARCHAR2(100)
)
LOGGING;

CREATE TABLE medsdata.products_region_data (
    long1                    NUMBER(12, 3),
    long2                    NUMBER(12, 3),
    long3                    NUMBER(12, 3),
    long4                    NUMBER(12, 3),
    lat1                     NUMBER(12, 3),
    lat2                     NUMBER(12, 3),
    lat3                     NUMBER(12, 3),
    lat4                     NUMBER(12, 3),
    working_title            VARCHAR2(100),
    final_title              VARCHAR2(100),
    time_period              VARCHAR2(50),
    branch                   VARCHAR2(20),
    variant                  VARCHAR2(20),
    edition                  VARCHAR2(20),
    classification           VARCHAR2(20),
    release_conditions       VARCHAR2(100),
    softcopy                 VARCHAR2(3),
    format                   VARCHAR2(20),
    encryption               VARCHAR2(3),
    hardcopy                 VARCHAR2(3),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    agency                   VARCHAR2(20),
    comments                 VARCHAR2(250)
)
LOGGING;

CREATE INDEX medsdata.idx_job_products_71 ON
    medsdata.products_region_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.products_region_observation (
    location                 mdsys.sdo_geometry,
    type                     VARCHAR2(20),
    status_date              DATE,
    ukho_id                  VARCHAR2(20),
    status                   VARCHAR2(20),
    origin                   VARCHAR2(20),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_job_products_72 ON
    medsdata.products_region_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.si_productsregion ON
    medsdata.products_region_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_date_products_41 ON
    medsdata.products_region_observation (
        status_date
    ASC );

CREATE TABLE medsdata.profile_data_sv (
    depth                    NUMBER(10, 3),
    temperature              NUMBER(10, 3),
    salinity                 NUMBER(10, 3),
    sv_recorded              NUMBER(10, 3),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(8),
    sv_quality               VARCHAR2(1),
    d_quality                VARCHAR2(1),
    t_quality                VARCHAR2(1),
    s_quality                VARCHAR2(1),
    sv_code                  VARCHAR2(1)
)
LOGGING;

CREATE INDEX medsdata.profile_data_sv_idx ON
    medsdata.profile_data_sv (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.profile_data_svall_idx ON
    medsdata.profile_data_sv (
        meds_job_number
    ASC,
        meds_observation_number
    ASC,
        depth
    ASC );

CREATE TABLE medsdata.profile_data_tonly (
    depth                    NUMBER(10, 3),
    temperature              NUMBER(10, 3),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    t_quality                VARCHAR2(1),
    d_quality                VARCHAR2(1)
)
LOGGING;

CREATE INDEX medsdata.profile_data_tonlyall_idx ON
    medsdata.profile_data_tonly (
        meds_job_number
    ASC,
        meds_observation_number
    ASC,
        depth
    ASC );

CREATE INDEX medsdata.profile_data_tonly_idx ON
    medsdata.profile_data_tonly (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.profile_data_ts (
    depth                    NUMBER(10, 3),
    temperature              NUMBER(10, 3),
    salinity                 NUMBER(10, 3),
    sv_calculated            NUMBER(10, 3),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    depth_indicator          VARCHAR2(1),
    t_quality                VARCHAR2(1),
    sv_quality               VARCHAR2(1),
    s_quality                VARCHAR2(1),
    d_quality                VARCHAR2(1),
    sv_code                  VARCHAR2(1)
)
LOGGING;

CREATE INDEX medsdata.profile_data_ts_idx ON
    medsdata.profile_data_ts (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.profile_data_tsall_idx ON
    medsdata.profile_data_ts (
        meds_job_number
    ASC,
        meds_observation_number
    ASC,
        depth
    ASC );

CREATE TABLE medsdata.profile_header_sv (
    additional_posn_ref      VARCHAR2(12),
    land_check               VARCHAR2(1),
    hood_cruise_id           VARCHAR2(8),
    meds_observation_number  NUMBER(8) NOT NULL,
    meds_job_number          NUMBER(10) NOT NULL,
    sv_corr                  VARCHAR2(3),
    t_corr                   VARCHAR2(3),
    s_corr                   VARCHAR2(4),
    d_corr                   VARCHAR2(3),
    hood_station_number      VARCHAR2(6),
    water_colour             VARCHAR2(2),
    water_trans              VARCHAR2(2),
    atmospheric_pressure     VARCHAR2(5),
    cloud                    VARCHAR2(1),
    dry_air_temp             VARCHAR2(4),
    sea_state                VARCHAR2(1),
    wave_height              VARCHAR2(2),
    wind_speed               VARCHAR2(2),
    wave_period              VARCHAR2(2),
    weather                  VARCHAR2(1),
    wet_air_temp             VARCHAR2(4),
    wind_dir                 VARCHAR2(2),
    s_scale_code             VARCHAR2(1),
    posn_determination       VARCHAR2(1),
    posn_accuracy_code       VARCHAR2(1),
    data_method              VARCHAR2(1),
    data_mode                VARCHAR2(1),
    units                    VARCHAR2(1),
    data_type                VARCHAR2(1),
    data_identifier          VARCHAR2(1),
    file_filler              VARCHAR2(4)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.profile_header_sv_idx ON
    medsdata.profile_header_sv (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

ALTER TABLE medsdata.profile_header_sv
    ADD CONSTRAINT profile_header_sv_idx PRIMARY KEY ( meds_job_number,
                                                       meds_observation_number )
        USING INDEX medsdata.profile_header_sv_idx;

CREATE TABLE medsdata.profile_header_tonly (
    additional_posn_ref      VARCHAR2(12),
    land_check               VARCHAR2(1),
    hood_cruise_id           VARCHAR2(8),
    meds_observation_number  NUMBER(8) NOT NULL,
    meds_job_number          NUMBER(10) NOT NULL,
    wind_speed               VARCHAR2(2),
    wind_dir                 VARCHAR2(2),
    wet_air_temp             VARCHAR2(4),
    dry_air_temp             VARCHAR2(4),
    wave_height              VARCHAR2(2),
    wave_period              VARCHAR2(2),
    bt_sst_ref               VARCHAR2(4),
    d_corr                   VARCHAR2(3),
    t_corr                   VARCHAR2(3),
    atmospheric_pressure     VARCHAR2(5),
    bt_sst_instrument        VARCHAR2(1),
    hood_station_number      VARCHAR2(6),
    mbt_surface_t_corr       VARCHAR2(3),
    water_trans              VARCHAR2(2),
    water_colour             VARCHAR2(2),
    mbt_type_quality         VARCHAR2(1),
    mbt_grade_quality        VARCHAR2(1),
    cloud                    VARCHAR2(1),
    sea_state                VARCHAR2(1),
    weather                  VARCHAR2(1),
    s_scale_code             VARCHAR2(1),
    posn_determination       VARCHAR2(1),
    posn_accuracy_code       VARCHAR2(1),
    data_method              VARCHAR2(1),
    data_mode                VARCHAR2(1),
    units                    VARCHAR2(1),
    data_type                VARCHAR2(1),
    data_identifier          VARCHAR2(1),
    file_filler              VARCHAR2(4)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.profile_header_tonly_idx ON
    medsdata.profile_header_tonly (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

ALTER TABLE medsdata.profile_header_tonly
    ADD CONSTRAINT profile_header_tonly_idx PRIMARY KEY ( meds_job_number,
                                                          meds_observation_number )
        USING INDEX medsdata.profile_header_tonly_idx;

CREATE TABLE medsdata.profile_header_ts (
    additional_posn_ref      VARCHAR2(12),
    land_check               VARCHAR2(1),
    hood_cruise_id           VARCHAR2(8),
    meds_observation_number  NUMBER(8) NOT NULL,
    meds_job_number          NUMBER(10) NOT NULL,
    weather                  VARCHAR2(1),
    wind_dir                 VARCHAR2(2),
    wind_speed               VARCHAR2(2),
    t_corr                   VARCHAR2(3),
    s_corr                   VARCHAR2(4),
    dry_air_temp             VARCHAR2(4),
    d_corr                   VARCHAR2(3),
    hood_station_number      VARCHAR2(6),
    wet_air_temp             VARCHAR2(4),
    sea_state                VARCHAR2(1),
    cloud                    VARCHAR2(1),
    water_colour             VARCHAR2(2),
    water_trans              VARCHAR2(2),
    wave_period              VARCHAR2(2),
    sv_corr                  VARCHAR2(3),
    atmospheric_pressure     VARCHAR2(5),
    wave_height              VARCHAR2(2),
    s_scale_code             VARCHAR2(1),
    posn_determination       VARCHAR2(1),
    posn_accuracy_code       VARCHAR2(1),
    data_method              VARCHAR2(1),
    data_mode                VARCHAR2(1),
    units                    VARCHAR2(1),
    data_type                VARCHAR2(1),
    data_identifier          VARCHAR2(1),
    file_filler              VARCHAR2(4)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.profile_header_ts_idx ON
    medsdata.profile_header_ts (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

ALTER TABLE medsdata.profile_header_ts
    ADD CONSTRAINT profile_header_ts_idx PRIMARY KEY ( meds_job_number,
                                                       meds_observation_number )
        USING INDEX medsdata.profile_header_ts_idx;

CREATE TABLE medsdata.profile_index_sv (
    comments                 VARCHAR2(640),
    date_time                DATE,
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10) NOT NULL,
    meds_cruise_number       NUMBER(8),
    instrument_code          NUMBER(3),
    meds_observation_number  NUMBER(8) NOT NULL,
    observed_depth           NUMBER(12, 4),
    minimum_depth_level      NUMBER(12, 4),
    maximum_depth_level      NUMBER(12, 4),
    number_of_depth_levels   NUMBER(5),
    marsden_square           NUMBER(8),
    quadrant                 NUMBER(2),
    degree_squre             NUMBER(5),
    duplicate_flag           NUMBER(1),
    year                     NUMBER(4),
    no_of_comments           NUMBER(2),
    hood_archive_year        NUMBER(2),
    string_location          VARCHAR2(15),
    latitude                 NUMBER(12, 4),
    longitude                NUMBER(12, 4),
    meds_ship_number         NUMBER(10),
    month                    NUMBER(2)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.profile_index_sv_idx ON
    medsdata.profile_index_sv (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.profile_index_sv_year ON
    medsdata.profile_index_sv (
        year
    ASC );

CREATE INDEX medsdata.profile_index_sv_instrument ON
    medsdata.profile_index_sv (
        instrument_code
    ASC );

CREATE INDEX medsdata.profile_index_sv_date ON
    medsdata.profile_index_sv (
        date_time
    ASC );

CREATE INDEX medsdata.profile_index_sv_month ON
    medsdata.profile_index_sv (
        month
    ASC );

CREATE INDEX medsdata.profile_index_sv_job ON
    medsdata.profile_index_sv (
        meds_job_number
    ASC );

CREATE INDEX medsdata.profile_index_sv_ship ON
    medsdata.profile_index_sv (
        meds_ship_number
    ASC );

CREATE INDEX medsdata.profile_index_sv_cruise ON
    medsdata.profile_index_sv (
        meds_cruise_number
    ASC );

CREATE INDEX medsdata.profile_index_sv_latlon ON
    medsdata.profile_index_sv (
        latitude
    ASC,
        longitude
    ASC );

ALTER TABLE medsdata.profile_index_sv
    ADD CONSTRAINT profile_index_sv_idx PRIMARY KEY ( meds_job_number,
                                                      meds_observation_number )
        USING INDEX medsdata.profile_index_sv_idx;

CREATE TABLE medsdata.profile_index_tonly (
    comments                 VARCHAR2(640),
    date_time                DATE,
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10) NOT NULL,
    meds_cruise_number       NUMBER(8),
    instrument_code          NUMBER(3),
    meds_observation_number  NUMBER(8) NOT NULL,
    observed_depth           NUMBER(12, 4),
    minimum_depth_level      NUMBER(12, 4),
    maximum_depth_level      NUMBER(12, 4),
    number_of_depth_levels   NUMBER(5),
    marsden_square           NUMBER(8),
    quadrant                 NUMBER(2),
    degree_squre             NUMBER(5),
    duplicate_flag           NUMBER(1),
    year                     NUMBER(4),
    no_of_comments           NUMBER(2),
    hood_archive_year        NUMBER(2),
    string_location          VARCHAR2(15),
    latitude                 NUMBER(12, 4),
    longitude                NUMBER(12, 4),
    meds_ship_number         NUMBER(10),
    month                    NUMBER(2)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.profile_index_tonly_idx ON
    medsdata.profile_index_tonly (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.profile_index_tonly_month ON
    medsdata.profile_index_tonly (
        month
    ASC );

CREATE INDEX medsdata.profile_index_tonly_ship ON
    medsdata.profile_index_tonly (
        meds_ship_number
    ASC );

CREATE INDEX medsdata.profile_index_tonly_date ON
    medsdata.profile_index_tonly (
        date_time
    ASC );

CREATE INDEX medsdata.profile_index_tonly_year ON
    medsdata.profile_index_tonly (
        year
    ASC );

CREATE INDEX medsdata.profile_index_tonly_latlon ON
    medsdata.profile_index_tonly (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.profile_index_tonly_cruise ON
    medsdata.profile_index_tonly (
        meds_cruise_number
    ASC );

CREATE INDEX medsdata.profile_index_tonly_instrument ON
    medsdata.profile_index_tonly (
        instrument_code
    ASC );

CREATE INDEX medsdata.profile_index_tonly_job ON
    medsdata.profile_index_tonly (
        meds_job_number
    ASC );

ALTER TABLE medsdata.profile_index_tonly
    ADD CONSTRAINT profile_index_tonly_idx PRIMARY KEY ( meds_job_number,
                                                         meds_observation_number )
        USING INDEX medsdata.profile_index_tonly_idx;

CREATE TABLE medsdata.profile_index_ts (
    comments                 VARCHAR2(640),
    date_time                DATE,
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10) NOT NULL,
    meds_cruise_number       NUMBER(8),
    instrument_code          NUMBER(3),
    meds_observation_number  NUMBER(8) NOT NULL,
    observed_depth           NUMBER(12, 4),
    minimum_depth_level      NUMBER(12, 4),
    maximum_depth_level      NUMBER(12, 4),
    number_of_depth_levels   NUMBER(5),
    marsden_square           NUMBER(8),
    quadrant                 NUMBER(2),
    degree_squre             NUMBER(5),
    duplicate_flag           NUMBER(1),
    year                     NUMBER(4),
    no_of_comments           NUMBER(2),
    hood_archive_year        NUMBER(2),
    string_location          VARCHAR2(15),
    latitude                 NUMBER(12, 4),
    longitude                NUMBER(12, 4),
    meds_ship_number         NUMBER(10),
    month                    NUMBER(2)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.profile_index_ts_idx ON
    medsdata.profile_index_ts (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.profile_index_ts_instrument ON
    medsdata.profile_index_ts (
        instrument_code
    ASC );

CREATE INDEX medsdata.profile_index_ts_latlon ON
    medsdata.profile_index_ts (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.profile_index_ts_month ON
    medsdata.profile_index_ts (
        month
    ASC );

CREATE INDEX medsdata.profile_index_ts_ship ON
    medsdata.profile_index_ts (
        meds_ship_number
    ASC );

CREATE INDEX medsdata.profile_index_ts_year ON
    medsdata.profile_index_ts (
        year
    ASC );

CREATE INDEX medsdata.profile_index_ts_date ON
    medsdata.profile_index_ts (
        date_time
    ASC );

CREATE INDEX medsdata.profile_index_ts_cruise ON
    medsdata.profile_index_ts (
        meds_cruise_number
    ASC );

CREATE INDEX medsdata.profile_index_ts_job ON
    medsdata.profile_index_ts (
        meds_job_number
    ASC );

ALTER TABLE medsdata.profile_index_ts
    ADD CONSTRAINT profile_index_ts_idx PRIMARY KEY ( meds_job_number,
                                                      meds_observation_number )
        USING INDEX medsdata.profile_index_ts_idx;

CREATE TABLE medsdata.profile_water_colour_lookup (
    profile_originator          VARCHAR2(50) DEFAULT NULL,
    profile_fore_ule_scale      NUMBER(5) DEFAULT NULL,
    profile_colour_h631a_scale  NUMBER(5) DEFAULT NULL,
    profile_colour_h631a_name   VARCHAR2(50) DEFAULT NULL
)
LOGGING;

CREATE TABLE medsdata.repeat_tables_lookup (
    data_type_index     NUMBER(8),
    repeat_table_index  NUMBER(8),
    insert_update       NUMBER(1),
    table_name          VARCHAR2(50),
    file_extension      VARCHAR2(20),
    offset              NUMBER(8),
    count               NUMBER(8),
    repeat_inline       NUMBER(1),
    update_method       NUMBER(1)
)
LOGGING;

CREATE TABLE medsdata.repres_ambientnoise_d1 (
    grid_index              NUMBER(8),
    time_of_year            VARCHAR2(50),
    freq_hz                 NUMBER(8),
    mean                    NUMBER(10, 3),
    number_of_observations  NUMBER(5),
    standard_deviation      NUMBER(9, 3),
    maximum                 NUMBER(9, 3),
    minimum                 NUMBER(9, 3),
    latitude                NUMBER(12, 3),
    longitude               NUMBER(12, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repambnoised1_toy ON
    medsdata.repres_ambientnoise_d1 (
        time_of_year
    ASC );

CREATE INDEX medsdata.idx_latlong_ambientnoise_d1 ON
    medsdata.repres_ambientnoise_d1 (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repambnoised1_grididx ON
    medsdata.repres_ambientnoise_d1 (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_igpads_l1 (
    grid_index                  NUMBER(8),
    hz_shipping_noise           NUMBER(9, 3),
    low_frequency_bottom_loss   NUMBER(1),
    high_frequency_bottom_loss  NUMBER(1),
    latitude                    NUMBER(12, 3),
    longitude                   NUMBER(12, 3)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.idx_repigpadsl1_grididx ON
    medsdata.repres_igpads_l1 (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_latlong_igpads_l1 ON
    medsdata.repres_igpads_l1 (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_igpads_l2 (
    grid_index                  NUMBER(8),
    hz_shipping_noise           NUMBER(9, 3),
    low_frequency_bottom_loss   NUMBER(1),
    high_frequency_bottom_loss  NUMBER(1),
    latitude                    NUMBER(12, 3),
    longitude                   NUMBER(12, 3)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.idx_repigpadsl2_grididx ON
    medsdata.repres_igpads_l2 (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_latlong_igpads_l2 ON
    medsdata.repres_igpads_l2 (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_mixedlayer_d1 (
    grid_index               NUMBER(8),
    month_id                 NUMBER(8),
    mean_mld                 NUMBER(10, 3),
    standard_deviation       NUMBER(10, 3),
    maximum_mld              NUMBER(10, 3),
    minimum_mld              NUMBER(10, 3),
    coefficient_variability  NUMBER(10, 3),
    no_mld                   NUMBER(10, 3),
    number_of_observations   NUMBER(6),
    mode_mld                 NUMBER(10, 3),
    latitude                 NUMBER(12, 3),
    longitude                NUMBER(12, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_latlong_mixedlayer_d1 ON
    medsdata.repres_mixedlayer_d1 (
        latitude
    ASC,
        longitude
    ASC );

CREATE UNIQUE INDEX medsdata.idx_repmixedlyrd1_grididxmth ON
    medsdata.repres_mixedlayer_d1 (
        latitude
    ASC,
        longitude
    ASC,
        month_id
    ASC );

CREATE INDEX medsdata.idx_repmixedlyrd1_grididx ON
    medsdata.repres_mixedlayer_d1 (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_mixedlayer_l1 (
    grid_index               NUMBER(8),
    month_id                 NUMBER(8),
    mean_mld                 NUMBER(10, 3),
    standard_deviation       NUMBER(10, 3),
    maximum_mld              NUMBER(10, 3),
    minimum_mld              NUMBER(10, 3),
    coefficient_variability  NUMBER(10, 3),
    no_mld                   NUMBER(10, 3),
    number_of_observations   NUMBER(6),
    mode_mld                 NUMBER(10, 3),
    latitude                 NUMBER(12, 3),
    longitude                NUMBER(12, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_latlong_mixedlayer_l1 ON
    medsdata.repres_mixedlayer_l1 (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repmixedlyrl1_grididx ON
    medsdata.repres_mixedlayer_l1 (
        grid_index
    ASC );

CREATE UNIQUE INDEX medsdata.idx_repmixedlyrl1_grididxmth ON
    medsdata.repres_mixedlayer_l1 (
        latitude
    ASC,
        longitude
    ASC,
        month_id
    ASC );

CREATE TABLE medsdata.repres_mixedlayer_l2 (
    grid_index               NUMBER(8),
    month_id                 NUMBER(8),
    mean_mld                 NUMBER(10, 3),
    standard_deviation       NUMBER(10, 3),
    maximum_mld              NUMBER(10, 3),
    minimum_mld              NUMBER(10, 3),
    coefficient_variability  NUMBER(10, 3),
    no_mld                   NUMBER(10, 3),
    number_of_observations   NUMBER(6),
    mode_mld                 NUMBER(10, 3),
    latitude                 NUMBER(12, 3),
    longitude                NUMBER(12, 3)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.idx_repmixedlyrl2_grididxmth ON
    medsdata.repres_mixedlayer_l2 (
        latitude
    ASC,
        longitude
    ASC,
        month_id
    ASC );

CREATE INDEX medsdata.idx_latlong_mixedlayer_l2 ON
    medsdata.repres_mixedlayer_l2 (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repmixedlyrl2_grididx ON
    medsdata.repres_mixedlayer_l2 (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l1_apr (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel1apr_latlon ON
    medsdata.repres_profile_l1_apr (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel1_apr ON
    medsdata.repres_profile_l1_apr (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l1_aug (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel1_aug ON
    medsdata.repres_profile_l1_aug (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel1aug_latlon ON
    medsdata.repres_profile_l1_aug (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l1_dec (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel1dec_latlon ON
    medsdata.repres_profile_l1_dec (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel1_dec ON
    medsdata.repres_profile_l1_dec (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l1_feb (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel1feb_latlon ON
    medsdata.repres_profile_l1_feb (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel1_feb ON
    medsdata.repres_profile_l1_feb (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l1_jan (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel1_jan ON
    medsdata.repres_profile_l1_jan (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel1jan_latlon ON
    medsdata.repres_profile_l1_jan (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l1_jul (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel1_jul ON
    medsdata.repres_profile_l1_jul (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel1jul_latlon ON
    medsdata.repres_profile_l1_jul (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l1_jun (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel1_jun ON
    medsdata.repres_profile_l1_jun (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel1jun_latlon ON
    medsdata.repres_profile_l1_jun (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l1_mar (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel1mar_latlon ON
    medsdata.repres_profile_l1_mar (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel1_mar ON
    medsdata.repres_profile_l1_mar (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l1_may (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel1may_latlon ON
    medsdata.repres_profile_l1_may (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel1_may ON
    medsdata.repres_profile_l1_may (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l1_nov (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel1nov_latlon ON
    medsdata.repres_profile_l1_nov (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel1_nov ON
    medsdata.repres_profile_l1_nov (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l1_oct (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel1_oct ON
    medsdata.repres_profile_l1_oct (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel1oct_latlon ON
    medsdata.repres_profile_l1_oct (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l1_sep (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel1sep_latlon ON
    medsdata.repres_profile_l1_sep (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel1_sep ON
    medsdata.repres_profile_l1_sep (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l2_apr (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel2apr_latlon ON
    medsdata.repres_profile_l2_apr (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel2_apr ON
    medsdata.repres_profile_l2_apr (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l2_aug (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel2_aug ON
    medsdata.repres_profile_l2_aug (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel2aug_latlon ON
    medsdata.repres_profile_l2_aug (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l2_dec (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel2_dec ON
    medsdata.repres_profile_l2_dec (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel2dec_latlon ON
    medsdata.repres_profile_l2_dec (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l2_feb (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel2_feb ON
    medsdata.repres_profile_l2_feb (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel2feb_latlon ON
    medsdata.repres_profile_l2_feb (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l2_jan (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel2_jan ON
    medsdata.repres_profile_l2_jan (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel2jan_latlon ON
    medsdata.repres_profile_l2_jan (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l2_jul (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel2_jul ON
    medsdata.repres_profile_l2_jul (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel2jul_latlon ON
    medsdata.repres_profile_l2_jul (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l2_jun (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel2jun_latlon ON
    medsdata.repres_profile_l2_jun (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel2_jun ON
    medsdata.repres_profile_l2_jun (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l2_mar (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel2_mar ON
    medsdata.repres_profile_l2_mar (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel2mar_latlon ON
    medsdata.repres_profile_l2_mar (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l2_may (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel2may_latlon ON
    medsdata.repres_profile_l2_may (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel2_may ON
    medsdata.repres_profile_l2_may (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l2_nov (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel2_nov ON
    medsdata.repres_profile_l2_nov (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel2nov_latlon ON
    medsdata.repres_profile_l2_nov (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l2_oct (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel2_oct ON
    medsdata.repres_profile_l2_oct (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel2oct_latlon ON
    medsdata.repres_profile_l2_oct (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l2_sep (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel2_sep ON
    medsdata.repres_profile_l2_sep (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel2sep_latlon ON
    medsdata.repres_profile_l2_sep (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l4_apr (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel4apr_latlon ON
    medsdata.repres_profile_l4_apr (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel4_apr ON
    medsdata.repres_profile_l4_apr (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l4_aug (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel4aug_latlon ON
    medsdata.repres_profile_l4_aug (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel4_aug ON
    medsdata.repres_profile_l4_aug (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l4_dec (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel4_dec ON
    medsdata.repres_profile_l4_dec (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel4dec_latlon ON
    medsdata.repres_profile_l4_dec (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l4_feb (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel4_feb ON
    medsdata.repres_profile_l4_feb (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel4feb_latlon ON
    medsdata.repres_profile_l4_feb (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l4_jan (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel4_jan ON
    medsdata.repres_profile_l4_jan (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel4jan_latlon ON
    medsdata.repres_profile_l4_jan (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l4_jul (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel4_jul ON
    medsdata.repres_profile_l4_jul (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel4jul_latlon ON
    medsdata.repres_profile_l4_jul (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l4_jun (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel4jun_latlon ON
    medsdata.repres_profile_l4_jun (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel4_jun ON
    medsdata.repres_profile_l4_jun (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l4_mar (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel4_mar ON
    medsdata.repres_profile_l4_mar (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel4mar_latlon ON
    medsdata.repres_profile_l4_mar (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l4_may (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel4may_latlon ON
    medsdata.repres_profile_l4_may (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel4_may ON
    medsdata.repres_profile_l4_may (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_profile_l4_nov (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel4_nov ON
    medsdata.repres_profile_l4_nov (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel4nov_latlon ON
    medsdata.repres_profile_l4_nov (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l4_oct (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repprofilel4_oct ON
    medsdata.repres_profile_l4_oct (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_profilel4oct_latlon ON
    medsdata.repres_profile_l4_oct (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_profile_l4_sep (
    grid_index      NUMBER(8),
    depth           NUMBER(10, 3),
    temperature     NUMBER(10, 3),
    salinity        NUMBER(10, 3),
    sound_speed     NUMBER(10, 3),
    sigma_t         NUMBER(10, 3),
    lh_salinity     NUMBER(10, 3),
    rh_salinity     NUMBER(10, 3),
    lh_temperature  NUMBER(10, 3),
    rh_temperature  NUMBER(10, 3),
    rh_sigma_t      NUMBER(10, 3),
    lh_sigma_t      NUMBER(10, 3),
    rh_sound_speed  NUMBER(10, 3),
    lh_sound_speed  NUMBER(10, 3),
    latitude        NUMBER(12, 3),
    longitude       NUMBER(12, 3),
    datatype        VARCHAR2(20) DEFAULT 'GENERIC',
    temp_stdev      NUMBER(10, 3),
    salinity_stdev  NUMBER(10, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_profilel4sep_latlon ON
    medsdata.repres_profile_l4_sep (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_repprofilel4_sep ON
    medsdata.repres_profile_l4_sep (
        grid_index
    ASC );

CREATE TABLE medsdata.repres_seasurface_l1 (
    grid_index               NUMBER(8),
    month_id                 NUMBER(8),
    wave_height              NUMBER(10, 3),
    wave_standard_deviation  NUMBER(10, 3),
    latitude                 NUMBER(12, 3),
    longitude                NUMBER(12, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repseasrfl1_grididx ON
    medsdata.repres_seasurface_l1 (
        grid_index
    ASC );

CREATE UNIQUE INDEX medsdata.idx_repseasrfl1_grididxmth ON
    medsdata.repres_seasurface_l1 (
        latitude
    ASC,
        longitude
    ASC,
        month_id
    ASC );

CREATE INDEX medsdata.idx_latlong_seasurface_l1 ON
    medsdata.repres_seasurface_l1 (
        latitude
    ASC,
        longitude
    ASC );

CREATE TABLE medsdata.repres_shiphits_d1 (
    grid_index    NUMBER(8),
    month_id      NUMBER(8),
    ship_density  NUMBER(10, 3),
    latitude      NUMBER(12, 3),
    longitude     NUMBER(12, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repshiphitsd1_grididx ON
    medsdata.repres_shiphits_d1 (
        grid_index
    ASC );

CREATE INDEX medsdata.idx_latlong_shiphits_d1 ON
    medsdata.repres_shiphits_d1 (
        latitude
    ASC,
        longitude
    ASC );

CREATE UNIQUE INDEX medsdata.idx_repshiphitsd1_grididxmth ON
    medsdata.repres_shiphits_d1 (
        latitude
    ASC,
        longitude
    ASC,
        month_id
    ASC );

CREATE TABLE medsdata.repres_species_l1 (
    grid_index    NUMBER(8),
    time_of_yr    VARCHAR2(50),
    species_type  VARCHAR2(20),
    species_name  VARCHAR2(30),
    depth_range   VARCHAR2(30),
    abundance     NUMBER(10, 3),
    latitude      NUMBER(12, 3),
    longitude     NUMBER(12, 3)
)
LOGGING;

CREATE INDEX medsdata.idx_repsecl1_loc ON
    medsdata.repres_species_l1 (
        latitude
    ASC,
        longitude
    ASC );

CREATE UNIQUE INDEX medsdata.idx_specl1_latlontypnam ON
    medsdata.repres_species_l1 (
        latitude
    ASC,
        longitude
    ASC,
        species_type
    ASC,
        species_name
    ASC );

CREATE INDEX medsdata.idx_repspeciesl1_grididx ON
    medsdata.repres_species_l1 (
        grid_index
    ASC );

CREATE TABLE medsdata.rows_per_job (
    booking_job  NUMBER(*, 0),
    table_type   CHAR(64),
    n_rows       NUMBER(*, 0)
)
LOGGING;

CREATE TABLE medsdata.seasoar_profile_data (
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    depth                    NUMBER(12, 4),
    temperature              NUMBER(12, 4),
    salinity                 NUMBER(12, 4),
    sound_speed              NUMBER(12, 4),
    density                  NUMBER(12, 4),
    turbidity                NUMBER(20, 10),
    chlorophyll              NUMBER(20, 10),
    hydrocarbons             NUMBER(20, 10),
    gelbstoffe               NUMBER(20, 10),
    attenuation              NUMBER(20, 10),
    bioluminescence          NUMBER(20, 4),
    profile_id               NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_seasoar_data_job ON
    medsdata.seasoar_profile_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.seasoar_profile_observation (
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    longitude                NUMBER(12, 4),
    latitude                 NUMBER(12, 4),
    date_recorded            DATE,
    profile_id               NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.si_seasoar_profile ON
    medsdata.seasoar_profile_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_seasoar_date ON
    medsdata.seasoar_profile_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.idx_seasoar_job ON
    medsdata.seasoar_profile_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.seasoar_tow_data (
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    depth                    NUMBER(12, 4),
    pressure                 NUMBER(12, 4),
    temperature              NUMBER(12, 4),
    salinity                 NUMBER(12, 4),
    sound_speed              NUMBER(12, 4),
    density                  NUMBER(12, 4),
    turbidity                NUMBER(20, 10),
    chlorophyll              NUMBER(20, 10),
    hydrocarbons             NUMBER(20, 10),
    gelbstoffe               NUMBER(20, 10),
    attenuation              NUMBER(20, 10),
    bioluminescence          NUMBER(20, 4),
    latitude                 NUMBER(12, 4),
    longitude                NUMBER(12, 4),
    date_recorded            DATE
)
LOGGING;

CREATE INDEX medsdata.idx_seasoar_tow_data_job ON
    medsdata.seasoar_tow_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.seasoar_tow_observation (
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    longitude                NUMBER(12, 4),
    latitude                 NUMBER(12, 4),
    date_recorded            DATE
)
LOGGING;

CREATE INDEX medsdata.idx_seasoar_tow_job ON
    medsdata.seasoar_tow_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.si_seasoar_tow ON
    medsdata.seasoar_tow_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_seasoar_tow_date ON
    medsdata.seasoar_tow_observation (
        date_recorded
    ASC );

CREATE TABLE medsdata.secchi_disk_data (
    record_number            NUMBER(6),
    water_colour             VARCHAR2(20),
    sun_angle                VARCHAR2(10),
    reference                VARCHAR2(100),
    general_area             VARCHAR2(100),
    stn_identifier           VARCHAR2(50),
    photic_depth             NUMBER(12, 4),
    horizontal_visability    NUMBER(12, 4),
    weather                  NUMBER(5),
    cloud                    NUMBER(5),
    ship                     VARCHAR2(100),
    cruise_identifier        VARCHAR2(100),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    archived                 VARCHAR2(20),
    diffuse_attn_coe         VARCHAR2(20),
    month                    VARCHAR2(10),
    gmt                      VARCHAR2(20),
    sea_state                VARCHAR2(10),
    secchi_depth             NUMBER(12, 4),
    water_colour_h631a       NUMBER(5) DEFAULT NULL,
    wind_direction           NUMBER(5),
    wind_speed               NUMBER(5),
    swell_direction          NUMBER(5),
    swell_period             NUMBER(5),
    atmos_pressure           NUMBER(5, 1),
    dryair_temperature       NUMBER(5, 1),
    wetair_temperature       NUMBER(5, 1)
)
LOGGING;

COMMENT ON TABLE medsdata.secchi_disk_data IS
    'DIFFUSE_ATTN_COE = 1.7/SECCHI_DEPTH 
PHOTIC_DEPTH = 3*SECCHI_DEPTH 
HORIZONTAL_VISABILITY = 0.7*SECCHI_DEPTH';

CREATE INDEX medsdata.idx_job_secchi_73 ON
    medsdata.secchi_disk_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.secchi_disk_data_pre_cr71887 (
    record_number            NUMBER(6),
    water_colour             VARCHAR2(20),
    sun_angle                VARCHAR2(10),
    reference                VARCHAR2(100),
    general_area             VARCHAR2(100),
    stn_identifier           VARCHAR2(50),
    photic_depth             NUMBER(12, 4),
    horizontal_visability    NUMBER(12, 4),
    weather                  NUMBER(5),
    cloud                    NUMBER(5),
    ship                     VARCHAR2(100),
    cruise_identifier        VARCHAR2(100),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    archived                 VARCHAR2(20),
    diffuse_attn_coe         VARCHAR2(20),
    month                    VARCHAR2(10),
    gmt                      VARCHAR2(20),
    sea_state                VARCHAR2(10),
    secchi_depth             NUMBER(12, 4)
)
LOGGING;

CREATE TABLE medsdata.secchi_disk_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE,
    latitude                 NUMBER(12, 8),
    longitude                NUMBER(12, 8)
)
LOGGING;

CREATE INDEX medsdata.idx_job_secchi_74 ON
    medsdata.secchi_disk_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE INDEX medsdata.idx_posn_secchi_29 ON
    medsdata.secchi_disk_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.si_secchidisk ON
    medsdata.secchi_disk_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_date_secchi_42 ON
    medsdata.secchi_disk_observation (
        date_recorded
    ASC );

CREATE TABLE medsdata.secchi_water_colour_lookup (
    secchi_colour_name         VARCHAR2(20) DEFAULT NULL,
    secchi_colour_h631a_scale  NUMBER(5) DEFAULT NULL
)
LOGGING;

CREATE TABLE medsdata.ship_codes_lookup (
    ship_name     VARCHAR2(32),
    year          NUMBER,
    ship_code     VARCHAR2(4),
    country_code  VARCHAR2(4)
)
LOGGING;

CREATE TABLE medsdata.ship_details (
    country_code         VARCHAR2(2),
    ices_ship_code       VARCHAR2(2),
    mias_institute_code  VARCHAR2(3),
    mias_institute_flag  NUMBER(2),
    ices_ship_flag       NUMBER(2),
    vessel_name          VARCHAR2(50),
    meds_ship_number     NUMBER(10),
    meds_cruise_number   NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.ship_details_ship_idx ON
    medsdata.ship_details (
        meds_ship_number
    ASC );

CREATE INDEX medsdata.ship_details_cruise_idx ON
    medsdata.ship_details (
        meds_cruise_number
    ASC );

CREATE INDEX medsdata.ship_details_instcode ON
    medsdata.ship_details (
        mias_institute_code
    ASC );

CREATE TABLE medsdata.shipping_data (
    flag                     VARCHAR2(6),
    ship_name                VARCHAR2(100),
    ircs                     VARCHAR2(10),
    imo                      VARCHAR2(20),
    mmsi                     VARCHAR2(20),
    course                   NUMBER(8, 3),
    speed                    NUMBER(8, 3),
    destination              VARCHAR2(50),
    eta                      DATE,
    coi                      VARCHAR2(20),
    length                   NUMBER(6),
    remarks                  VARCHAR2(100),
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10)
)
LOGGING;

CREATE INDEX medsdata.idx_shipping ON
    medsdata.shipping_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.shipping_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE,
    latitude                 NUMBER(12, 8),
    longitude                NUMBER(12, 8)
)
LOGGING;

CREATE INDEX medsdata.si_shipping ON
    medsdata.shipping_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE INDEX medsdata.idx_posn_shipping ON
    medsdata.shipping_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_date_shipping ON
    medsdata.shipping_observation (
        date_recorded
    ASC );

CREATE INDEX medsdata.idx_job_shipping ON
    medsdata.shipping_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.spatial_duff (
    location                 mdsys.sdo_geometry,
    meds_job_number          NUMBER(10),
    meds_observation_number  NUMBER(10),
    mid_latitude             NUMBER(12, 6),
    mid_longitude            NUMBER(12, 6),
    profile_id               NUMBER(10),
    profile_dir              NUMBER(2),
    distance_traveled        NUMBER(12, 4)
)
LOGGING;

CREATE TABLE medsdata.standard_lookup (
    description  VARCHAR2(50),
    table_name   VARCHAR2(50),
    column_name  VARCHAR2(50)
)
LOGGING;

CREATE TABLE medsdata.stats_period (
    period_start  DATE NOT NULL,
    period_end    DATE NOT NULL
)
LOGGING;

CREATE TABLE medsdata.summary_2019_us (
    supplier       VARCHAR2(64),
    description    VARCHAR2(200),
    cruise_name    VARCHAR2(50),
    obs_count      NUMBER,
    data_use_code  VARCHAR2(20),
    datatype       CHAR(5),
    meic_number    NUMBER
)
LOGGING;

CREATE TABLE medsdata.summary_2021_us (
    supplier       VARCHAR2(64),
    description    VARCHAR2(200),
    cruise_name    VARCHAR2(50),
    obs_count      NUMBER,
    data_use_code  VARCHAR2(20),
    datatype       CHAR(5),
    meic_number    NUMBER
)
LOGGING;

CREATE TABLE medsdata.support_tables (
    name VARCHAR2(50)
)
LOGGING;

CREATE UNIQUE INDEX medsdata.idx_suptab_nam ON
    medsdata.support_tables (
        name
    ASC );

CREATE TABLE medsdata.tab_columns (
    table_name   VARCHAR2(30) NOT NULL,
    column_name  VARCHAR2(30) NOT NULL,
    tab_number   NUMBER NOT NULL,
    tab_name     VARCHAR2(20),
    edit_order   NUMBER,
    mandatory    NUMBER,
    constraint   NUMBER
)
LOGGING;

CREATE TABLE medsdata.tab_columns_copy (
    table_name   VARCHAR2(30) NOT NULL,
    column_name  VARCHAR2(30) NOT NULL,
    tab_number   NUMBER NOT NULL,
    tab_name     VARCHAR2(20),
    edit_order   NUMBER,
    mandatory    NUMBER,
    constraint   NUMBER
)
LOGGING;

CREATE TABLE medsdata.table_index_lookup (
    table_name     VARCHAR2(50),
    field_name     VARCHAR2(50),
    index_table    VARCHAR2(50),
    index_field    VARCHAR2(50),
    single_repeat  NUMBER(1)
)
LOGGING;

CREATE INDEX medsdata.idx_levelindex_tablenam ON
    medsdata.table_index_lookup (
        table_name
    ASC );

CREATE TABLE medsdata.temp_jobs (
    meds_job_id                NUMBER,
    po_no                      VARCHAR2(12),
    ingres_no                  NUMBER,
    date_recd                  DATE,
    supplier                   VARCHAR2(128),
    acknowledge                CHAR(1),
    priority_region1           CHAR(1),
    priority_region2           CHAR(1),
    priority_region3           CHAR(1),
    priority_region4           CHAR(1),
    priority_region5           CHAR(1),
    priority_region6           CHAR(1),
    no_of_obs_approx           NUMBER,
    collection_start           DATE,
    collection_end             DATE,
    qa_processing_target_date  DATE,
    qa_processing_completed    DATE,
    hood_load_date_            DATE,
    obs_accepted               NUMBER,
    obs_rejected               NUMBER,
    mors_or_other_sv_data      CHAR(1),
    ctd                        CHAR(1),
    xctd                       CHAR(1),
    vos                        CHAR(1),
    argo                       CHAR(1),
    seabed_samples_h575        CHAR(1),
    xsv                        CHAR(1),
    xbt                        CHAR(1),
    omni_directional           CHAR(1),
    towed_array                CHAR(1),
    directional                CHAR(1),
    secchi                     CHAR(1),
    biolumin_h636              CHAR(1),
    marine_life_h637           CHAR(1),
    neil_brown_biology         CHAR(1),
    sonar_2081                 CHAR(1),
    aquashuttle                CHAR(1),
    chlorophyll                CHAR(1),
    miscellaneous              CHAR(1),
    exchange                   CHAR(1),
    fronts                     CHAR(1),
    sea_ice                    CHAR(1),
    internal_waves             CHAR(1),
    comments                   VARCHAR2(512),
    po_number                  NUMBER DEFAULT NULL,
    po_task                    CHAR(1) DEFAULT NULL,
    job_type_number            NUMBER DEFAULT NULL
)
LOGGING;

CREATE TABLE medsdata.tiff_charts (
    filename      CHAR(64),
    size_degrees  NUMBER,
    limits        mdsys.sdo_geometry
)
LOGGING;

CREATE INDEX medsdata.si_tiff_charts ON
    medsdata.tiff_charts (
        limits
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE TABLE medsdata.tiff_charts_backup (
    filename      CHAR(64),
    size_degrees  NUMBER,
    limits        mdsys.sdo_geometry
)
LOGGING;

CREATE TABLE medsdata.tmp_field_check (
    table_name  VARCHAR2(50),
    field_name  VARCHAR2(50),
    found       NUMBER(*, 0)
)
LOGGING;

CREATE TABLE medsdata.tssv_count (
    type   VARCHAR2(50),
    total  NUMBER
)
LOGGING;

CREATE TABLE medsdata.tssv_instrument (
    instrument  VARCHAR2(50),
    total       NUMBER
)
LOGGING;

CREATE TABLE medsdata.unified_secchi_data (
    data_type                VARCHAR2(8),
    record_number            NUMBER(6),
    water_colour             NUMBER(5),
    water_colour_name        VARCHAR2(20),
    sun_angle                VARCHAR2(10),
    reference                VARCHAR2(100),
    general_area             VARCHAR2(100),
    stn_identifier           VARCHAR2(50),
    photic_depth             NUMBER(12, 4),
    horizontal_visability    NUMBER(12, 4),
    weather                  NUMBER(5),
    cloud                    NUMBER(5),
    ship                     VARCHAR2(100),
    ship_code                VARCHAR2(2),
    country_code             VARCHAR2(2),
    cruise_identifier        VARCHAR2(100),
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    archived                 VARCHAR2(20),
    diffuse_attn_coe         VARCHAR2(20),
    month                    NUMBER(2),
    gmt                      VARCHAR2(20),
    sea_state                VARCHAR2(10),
    secchi_depth             NUMBER(12, 4),
    src                      VARCHAR2(7)
)
LOGGING;

CREATE INDEX medsdata.idx_unified_secchi_data_obs ON
    medsdata.unified_secchi_data (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.unified_secchi_observation (
    meds_observation_number  NUMBER(10),
    meds_job_number          NUMBER(10),
    location                 mdsys.sdo_geometry,
    date_recorded            DATE,
    latitude                 NUMBER(12, 8),
    longitude                NUMBER(12, 8),
    src                      VARCHAR2(7)
)
LOGGING;

CREATE INDEX medsdata.si_unifiedsecchi ON
    medsdata.unified_secchi_observation (
        location
    )
        INDEXTYPE IS mdsys.spatial_index PARAMETERS ( 'SDO_LEVEL=2 SDO_NUMTILES=1 TABLESPACE = INDX' );

CREATE INDEX medsdata.idx_unified_secchi_latlon ON
    medsdata.unified_secchi_observation (
        latitude
    ASC,
        longitude
    ASC );

CREATE INDEX medsdata.idx_unified_secci_obs ON
    medsdata.unified_secchi_observation (
        meds_job_number
    ASC,
        meds_observation_number
    ASC );

CREATE TABLE medsdata.unified_water_colour_lookup (
    unified_colour_h631a_name   VARCHAR2(20) DEFAULT NULL,
    unified_colour_h631a_scale  NUMBER(5) DEFAULT NULL
)
LOGGING;

CREATE TABLE medsdata.val_results (
    sdo_rowid  ROWID,
    result     VARCHAR2(1000)
)
LOGGING;

CREATE TABLE medsdata.water_colour (
    water_colour  NUMBER(5),
    colour_desc   VARCHAR2(20)
)
LOGGING;

CREATE TABLE medsdata.wvs_3m (
    objectid          NUMBER(38) NOT NULL,
    id                NUMBER(11),
    fac_id            NUMBER(11),
    facc              VARCHAR2(5),
    facc_descr        VARCHAR2(254),
    cvh               NUMBER(6),
    cvl               NUMBER(6),
    tile_id           NUMBER(6),
    shape             mdsys.sdo_geometry,
    se_anno_cad_data  BLOB
)
LOGGING;

CREATE INDEX medsdata.bathy_cvl ON
    medsdata.wvs_3m (
        cvl
    ASC );

CREATE INDEX medsdata.si_bathy ON
    medsdata.wvs_3m (
        shape
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE TABLE medsdata.wvs_3m_bathy_line (
    objectid          NUMBER(*, 0) NOT NULL,
    id                NUMBER(11),
    edg_id            NUMBER(11),
    facc              VARCHAR2(5),
    facc_descr        VARCHAR2(254),
    crv               NUMBER(6),
    tile_id           NUMBER(6),
    shape             mdsys.sdo_geometry,
    se_anno_cad_data  BLOB
)
LOGGING;

CREATE INDEX medsdata.wvs_bathy_3m ON
    medsdata.wvs_3m_bathy_line (
        crv
    ASC );

CREATE UNIQUE INDEX medsdata.r421_sde_rowid_uk ON
    medsdata.wvs_3m_bathy_line (
        objectid
    ASC );

CREATE INDEX medsdata.a531_ix1 ON
    medsdata.wvs_3m_bathy_line (
        shape
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE TABLE medsdata.wvs_d_3m_countpoly (
    objectid          NUMBER(*, 0) NOT NULL,
    nam_descri        VARCHAR2(254),
    count             NUMBER(11),
    shape             mdsys.sdo_geometry,
    se_anno_cad_data  BLOB
)
LOGGING;

CREATE UNIQUE INDEX medsdata.wvs_country ON
    medsdata.wvs_d_3m_countpoly (
        nam_descri
    ASC );

CREATE INDEX medsdata.a530_ix1 ON
    medsdata.wvs_d_3m_countpoly (
        shape
    )
        INDEXTYPE IS mdsys.spatial_index;

CREATE UNIQUE INDEX medsdata.r420_sde_rowid_uk ON
    medsdata.wvs_d_3m_countpoly (
        objectid
    ASC );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                           244
-- CREATE INDEX                           404
-- ALTER TABLE                             13
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                        362
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
